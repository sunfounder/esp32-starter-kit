.. note::

    Bonjour, bienvenue dans la communaut√© des passionn√©s de SunFounder Raspberry Pi & Arduino & ESP32 sur Facebook ! Plongez plus profond√©ment dans Raspberry Pi, Arduino et ESP32 avec d'autres passionn√©s.

    **Pourquoi nous rejoindre ?**

    - **Support d'experts** : R√©solvez les probl√®mes apr√®s-vente et les d√©fis techniques avec l'aide de notre communaut√© et de notre √©quipe.
    - **Apprendre et partager** : √âchangez des conseils et des tutoriels pour am√©liorer vos comp√©tences.
    - **Aper√ßus exclusifs** : Acc√©dez en avant-premi√®re aux annonces de nouveaux produits et aux avant-go√ªts.
    - **R√©ductions sp√©ciales** : Profitez de r√©ductions exclusives sur nos derniers produits.
    - **Promotions festives et cadeaux** : Participez √† des concours et √† des promotions sp√©ciales pour les f√™tes.

    üëâ Pr√™t √† explorer et cr√©er avec nous ? Cliquez sur [|link_sf_facebook|] et rejoignez-nous d√®s aujourd'hui !

.. _ar_lcd1602:

2.6 Affichage de Caract√®res
===============================

Nous allons maintenant explorer le monde fascinant de l'affichage de caract√®res en utilisant le module I2C LCD1602.

√Ä travers ce projet, nous apprendrons √† initialiser le module LCD, √† d√©finir les param√®tres d'affichage souhait√©s et √† envoyer des donn√©es de caract√®res √† afficher √† l'√©cran. Nous pourrons afficher des messages personnalis√©s, des relev√©s de capteurs ou cr√©er des menus interactifs. Les possibilit√©s sont infinies !

En ma√Ætrisant l'art de l'affichage de caract√®res sur le I2C LCD1602, nous ouvrirons de nouvelles voies de communication et d'affichage d'informations dans nos projets. Plongeons dans cette aventure passionnante et donnons vie √† nos caract√®res sur l'√©cran LCD.

**Composants n√©cessaires**

Pour ce projet, nous avons besoin des composants suivants.

Il est tr√®s pratique d'acheter un kit complet, voici le lien :

.. list-table::
    :widths: 20 20 20
    :header-rows: 1

    *   - Nom	
        - √âL√âMENTS DANS CE KIT
        - LIEN
    *   - Kit de d√©marrage ESP32
        - 320+
        - |link_esp32_starter_kit|

Vous pouvez √©galement les acheter s√©par√©ment via les liens ci-dessous.

.. list-table::
    :widths: 30 20
    :header-rows: 1

    *   - INTRODUCTION AUX COMPOSANTS
        - LIEN D'ACHAT

    *   - :ref:`cpn_esp32_wroom_32e`
        - |link_esp32_wroom_32e_buy|
    *   - :ref:`cpn_esp32_camera_extension`
        - |link_esp32_extension_board|
    *   - :ref:`cpn_wires`
        - |link_wires_buy|
    *   - :ref:`cpn_lcd`
        - |link_i2clcd1602_buy|


**Broches disponibles**

Voici une liste des broches disponibles sur la carte ESP32 pour ce projet.

.. list-table::
    :widths: 5 15
    :header-rows: 1

    *   - Broches disponibles
        - Description d'utilisation

    *   - IO21
        - SDA
    *   - IO22
        - SCL

**Sch√©ma**

.. image:: ../../img/circuit/circuit_2.6_lcd.png

**C√¢blage**

.. image:: ../../img/wiring/2.6_i2clcd1602_bb.png
    :width: 800

**Code**

.. note::

    * Ouvrez le fichier ``2.6_lcd1602.ino`` sous le chemin ``esp32-starter-kit-main\c\codes\2.6_lcd1602``.
    * Apr√®s avoir s√©lectionn√© la carte (ESP32 Dev Module) et le port appropri√©, cliquez sur le bouton **Upload**.
    * :ref:`unknown_com_port`
    * La biblioth√®que ``LiquidCrystal I2C`` est utilis√©e ici, vous pouvez l'installer depuis le **Library Manager**.

        .. image:: img/lcd_lib.png

.. raw:: html

    <iframe src=https://create.arduino.cc/editor/sunfounder01/31e33e53-67b2-4e29-b78b-f647fd45fb0b/preview?embed style="height:510px;width:100%;margin:10px 0" frameborder=0></iframe>

Une fois ce programme t√©l√©vers√©, le I2C LCD1602 affichera le message de bienvenue "Hello, Sunfounder!" pendant 3 secondes. Ensuite, l'√©cran affichera l'√©tiquette "COUNT:" et la valeur du compteur, qui s'incr√©mente chaque seconde.

.. note:: 

    Si le code et le c√¢blage sont corrects, mais que le LCD n'affiche toujours aucun contenu, vous pouvez ajuster le potentiom√®tre √† l'arri√®re pour augmenter le contraste.

**Comment √ßa marche ?**

En appelant la biblioth√®que ``LiquidCrystal_I2C.h``, vous pouvez facilement piloter le LCD. 

.. code-block:: arduino

    #include <LiquidCrystal_I2C.h>

Fonctions de la biblioth√®que :

* Cr√©e une nouvelle instance de la classe ``LiquidCrystal_I2C`` qui repr√©sente un LCD particulier attach√© √† votre carte Arduino.

    .. code-block:: arduino

        LiquidCrystal_I2C(uint8_t lcd_Addr,uint8_t lcd_cols,uint8_t lcd_rows)

    * ``lcd_Addr`` : L'adresse du LCD, par d√©faut 0x27.
    * ``lcd_cols`` : Le LCD1602 a 16 colonnes.
    * ``lcd_rows`` : Le LCD1602 a 2 rang√©es.

* Initialiser le LCD.

    .. code-block:: arduino

        void init()

* Allumer le r√©tro√©clairage (optionnel).

    .. code-block:: arduino

        void backlight()

* √âteindre le r√©tro√©clairage (optionnel).

    .. code-block:: arduino

        void nobacklight()

* Allumer l'affichage du LCD.

    .. code-block:: arduino

        void display()

* √âteindre rapidement l'affichage du LCD.

    .. code-block:: arduino

        void nodisplay()

* Effacer l'affichage, positionner le curseur √† z√©ro.

    .. code-block:: arduino

        void clear()

* Positionner le curseur √† la colonne et rang√©e sp√©cifi√©es.

    .. code-block:: arduino

        void setCursor(uint8_t col,uint8_t row)

* Afficher du texte sur le LCD.

    .. code-block:: arduino

        void print(data,BASE)

    * ``data`` : Les donn√©es √† afficher (char, byte, int, long, ou string).
    * ``BASE (optionnel)`` : La base dans laquelle afficher les nombres.

        * ``BIN`` pour binaire (base 2)
        * ``DEC`` pour d√©cimal (base 10)
        * ``OCT`` pour octal (base 8)
        * ``HEX`` pour hexad√©cimal (base 16).
