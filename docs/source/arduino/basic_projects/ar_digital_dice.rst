.. note::

    ¬°Hola, bienvenido a la Comunidad de Aficionados a Raspberry Pi, Arduino y ESP32 de SunFounder en Facebook! Profundiza en Raspberry Pi, Arduino y ESP32 con otros entusiastas.

    **¬øPor qu√© unirse?**

    - **Soporte de expertos**: Resuelve problemas posventa y desaf√≠os t√©cnicos con ayuda de nuestra comunidad y equipo.
    - **Aprender y compartir**: Intercambia consejos y tutoriales para mejorar tus habilidades.
    - **Vistas previas exclusivas**: Obt√©n acceso anticipado a anuncios de nuevos productos y avances.
    - **Descuentos especiales**: Disfruta de descuentos exclusivos en nuestros productos m√°s nuevos.
    - **Promociones festivas y sorteos**: Participa en sorteos y promociones de fiestas.

    üëâ ¬øListo para explorar y crear con nosotros? Haz clic en [|link_sf_facebook|] y √∫nete hoy!

.. _ar_dice:

6.4 Dados Digitales
=============================

Este proyecto se basa en el proyecto :ref:`py_7_segment` agregando un bot√≥n para controlar el d√≠gito mostrado en el display de siete segmentos.

En este proyecto, se genera un n√∫mero aleatorio y se muestra en el display de siete segmentos para simular un lanzamiento de dados. Cuando se presiona el bot√≥n, se muestra un n√∫mero estable (seleccionado al azar de 1 a 6) en el display de siete segmentos. Presionar el bot√≥n nuevamente iniciar√° la simulaci√≥n de un lanzamiento de dados, generando n√∫meros aleatorios como antes. Este ciclo contin√∫a cada vez que se presiona el bot√≥n.

**Componentes Necesarios**

Para este proyecto, necesitamos los siguientes componentes.

Es definitivamente conveniente comprar un kit completo, aqu√≠ est√° el enlace:

.. list-table::
    :widths: 20 20 20
    :header-rows: 1

    *   - Nombre	
        - ELEMENTOS EN ESTE KIT
        - ENLACE
    *   - Kit de Inicio ESP32
        - 320+
        - |link_esp32_starter_kit|

Tambi√©n puedes comprarlos por separado en los enlaces a continuaci√≥n.

.. list-table::
    :widths: 30 20
    :header-rows: 1

    *   - INTRODUCCI√ìN DE COMPONENTES
        - ENLACE DE COMPRA

    *   - :ref:`cpn_esp32_wroom_32e`
        - |link_esp32_wroom_32e_buy|
    *   - :ref:`cpn_esp32_camera_extension`
        - \-
    *   - :ref:`cpn_breadboard`
        - |link_breadboard_buy|
    *   - :ref:`cpn_wires`
        - |link_wires_buy|
    *   - :ref:`cpn_resistor`
        - |link_resistor_buy|
    *   - :ref:`cpn_74hc595`
        - |link_74hc595_buy|
    *   - :ref:`cpn_7_segment`
        - |link_7segment_buy|
    *   - :ref:`cpn_button`
        - |link_button_buy|

**Esquem√°tico**

.. image:: ../../img/circuit/circuit_6.6_electronic_dice.png

Este proyecto se basa en el proyecto :ref:`ar_7_segment` agregando un bot√≥n para controlar el d√≠gito mostrado en el display de siete segmentos.

El bot√≥n est√° conectado directamente a IO13 sin una resistencia de pull-up o pull-down externa porque IO13 tiene una resistencia de pull-up interna de 47K, eliminando la necesidad de una resistencia externa adicional.

**Cableado**

.. image:: ../../img/wiring/6.6_DICE_bb.png

**C√≥digo**

.. note::

    * Abre el archivo ``6.4_digital_dice.ino`` bajo la ruta de ``esp32-starter-kit-main\c\codes\6.4_digital_dice``.
    * Despu√©s de seleccionar la placa (ESP32 Dev Module) y el puerto apropiado, haz clic en el bot√≥n **Subir**.
    * :ref:`unknown_com_port`
    
    
.. raw:: html
    
    <iframe src=https://create.arduino.cc/editor/sunfounder01/ad904f48-cd24-49ce-ad92-91b1fb76364d/preview?embed style="height:510px;width:100%;margin:10px 0" frameborder=0></iframe>
    
Este proyecto se basa en :ref:`ar_7_segment` con un bot√≥n para iniciar/pausar el desplazamiento de la pantalla en el Display de 7 segmentos.

Cuando se presiona el bot√≥n, el display de 7 segmentos desplaza los n√∫meros del 1-6, y cuando se suelta el bot√≥n, muestra un n√∫mero aleatorio.
