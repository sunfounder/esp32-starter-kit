.. note::

    Bonjour, bienvenue dans la communaut√© des passionn√©s de SunFounder Raspberry Pi & Arduino & ESP32 sur Facebook ! Plongez plus profond√©ment dans Raspberry Pi, Arduino et ESP32 avec d'autres passionn√©s.

    **Pourquoi nous rejoindre ?**

    - **Support d'experts** : R√©solvez les probl√®mes apr√®s-vente et les d√©fis techniques avec l'aide de notre communaut√© et de notre √©quipe.
    - **Apprendre et partager** : √âchangez des conseils et des tutoriels pour am√©liorer vos comp√©tences.
    - **Aper√ßus exclusifs** : Acc√©dez en avant-premi√®re aux annonces de nouveaux produits et aux avant-go√ªts.
    - **R√©ductions sp√©ciales** : Profitez de r√©ductions exclusives sur nos derniers produits.
    - **Promotions festives et concours** : Participez √† des concours et √† des promotions sp√©ciales pour les f√™tes.

    üëâ Pr√™t √† explorer et cr√©er avec nous ? Cliquez sur [|link_sf_facebook|] et rejoignez-nous d√®s aujourd'hui !

.. _ar_dice:

6.4 D√© num√©rique
=============================

Ce projet s'appuie sur le projet :ref:`py_7_segment` en ajoutant un bouton pour contr√¥ler le chiffre affich√© sur l'afficheur √† sept segments.

Dans ce projet, un nombre al√©atoire est g√©n√©r√© et affich√© sur l'afficheur √† sept segments pour simuler un lancer de d√©. Lorsque le bouton est enfonc√©, un nombre stable (s√©lectionn√© al√©atoirement de 1 √† 6) est affich√© sur l'afficheur √† sept segments. En appuyant de nouveau sur le bouton, la simulation d'un lancer de d√© est relanc√©e, g√©n√©rant √† nouveau des nombres al√©atoires. Ce cycle se poursuit √† chaque fois que le bouton est press√©.

**Composants n√©cessaires**

Pour ce projet, nous avons besoin des composants suivants. 

Il est d√©finitivement pratique d'acheter un kit complet, voici le lien :

.. list-table::
    :widths: 20 20 20
    :header-rows: 1

    *   - Nom	
        - √âL√âMENTS DANS CE KIT
        - LIEN
    *   - Kit de d√©marrage ESP32
        - 320+
        - |link_esp32_starter_kit|

Vous pouvez √©galement les acheter s√©par√©ment via les liens ci-dessous.

.. list-table::
    :widths: 30 20
    :header-rows: 1

    *   - INTRODUCTION AUX COMPOSANTS
        - LIEN D'ACHAT

    *   - :ref:`cpn_esp32_wroom_32e`
        - |link_esp32_wroom_32e_buy|
    *   - :ref:`cpn_esp32_camera_extension`
        - |link_esp32_extension_board|
    *   - :ref:`cpn_breadboard`
        - |link_breadboard_buy|
    *   - :ref:`cpn_wires`
        - |link_wires_buy|
    *   - :ref:`cpn_resistor`
        - |link_resistor_buy|
    *   - :ref:`cpn_74hc595`
        - |link_74hc595_buy|
    *   - :ref:`cpn_7_segment`
        - |link_7segment_buy|
    *   - :ref:`cpn_button`
        - |link_button_buy|

**Sch√©ma**

.. image:: ../../img/circuit/circuit_6.6_electronic_dice.png

Ce projet s'appuie sur le projet :ref:`ar_7_segment` en ajoutant un bouton pour contr√¥ler le chiffre affich√© sur l'afficheur √† sept segments.

Le bouton est directement connect√© √† IO13 sans r√©sistance pull-up ou pull-down externe car IO13 poss√®de une r√©sistance pull-up interne de 47K, √©liminant ainsi le besoin d'une r√©sistance externe suppl√©mentaire.

**C√¢blage**

.. image:: ../../img/wiring/6.6_DICE_bb.png

**Code**

.. note::

    * Ouvrez le fichier ``6.4_digital_dice.ino`` sous le chemin ``esp32-starter-kit-main\c\codes\6.4_digital_dice``.
    * Apr√®s avoir s√©lectionn√© la carte (ESP32 Dev Module) et le port appropri√©, cliquez sur le bouton **Upload**.
    * :ref:`unknown_com_port`
    
.. raw:: html
    
    <iframe src=https://create.arduino.cc/editor/sunfounder01/ad904f48-cd24-49ce-ad92-91b1fb76364d/preview?embed style="height:510px;width:100%;margin:10px 0" frameborder=0></iframe>
    
Ce projet est bas√© sur :ref:`ar_7_segment` avec un bouton pour d√©marrer/mettre en pause l'affichage d√©filant sur l'afficheur √† 7 segments.

Lorsque le bouton est press√©, l'afficheur √† 7 segments d√©file les chiffres de 1 √† 6, et lorsque le bouton est rel√¢ch√©, il affiche un nombre al√©atoire.

