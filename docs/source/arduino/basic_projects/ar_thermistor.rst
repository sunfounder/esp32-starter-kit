.. note::

    Bonjour, bienvenue dans la communaut√© des passionn√©s de SunFounder Raspberry Pi & Arduino & ESP32 sur Facebook ! Plongez plus profond√©ment dans Raspberry Pi, Arduino et ESP32 avec d'autres passionn√©s.

    **Pourquoi nous rejoindre ?**

    - **Support d'experts** : R√©solvez les probl√®mes post-vente et les d√©fis techniques gr√¢ce √† l'aide de notre communaut√© et de notre √©quipe.
    - **Apprendre et partager** : √âchangez des conseils et des tutoriels pour am√©liorer vos comp√©tences.
    - **Aper√ßus exclusifs** : B√©n√©ficiez d'un acc√®s anticip√© aux annonces de nouveaux produits et aux avant-premi√®res.
    - **R√©ductions sp√©ciales** : Profitez de r√©ductions exclusives sur nos derniers produits.
    - **Promotions festives et cadeaux** : Participez √† des concours et promotions de vacances.

    üëâ Pr√™t √† explorer et cr√©er avec nous ? Cliquez sur [|link_sf_facebook|] et rejoignez-nous d√®s aujourd'hui !

.. _ar_thermistor:

5.10 Thermom√®tre
===========================

Un thermistor est un capteur de temp√©rature qui montre une forte d√©pendance √† la temp√©rature. Il peut √™tre class√© en deux types : Coefficient de Temp√©rature N√©gatif (NTC) et Coefficient de Temp√©rature Positif (PTC). La r√©sistance d'un thermistor NTC diminue avec l'augmentation de la temp√©rature, tandis que la r√©sistance d'un thermistor PTC augmente avec l'augmentation de la temp√©rature.

Dans ce projet, nous utiliserons un thermistor NTC. En connectant le thermistor NTC √† une broche d'entr√©e analogique du microcontr√¥leur ESP32, nous pouvons mesurer sa r√©sistance, qui est directement proportionnelle √† la temp√©rature.

En incorporant le thermistor NTC et en effectuant les calculs n√©cessaires, nous pouvons mesurer avec pr√©cision la temp√©rature et l'afficher sur le module I2C LCD1602. Ce projet permet la surveillance en temps r√©el de la temp√©rature et offre une interface visuelle pour l'affichage de la temp√©rature.

**Composants requis**

Pour ce projet, nous avons besoin des composants suivants.

Il est certainement pratique d'acheter un kit complet, voici le lien :

.. list-table::
    :widths: 20 20 20
    :header-rows: 1

    *   - Nom	
        - ARTICLES DANS CE KIT
        - LIEN
    *   - Kit de d√©marrage ESP32
        - 320+
        - |link_esp32_starter_kit|

Vous pouvez √©galement les acheter s√©par√©ment √† partir des liens ci-dessous.

.. list-table::
    :widths: 30 20
    :header-rows: 1

    *   - INTRODUCTION DES COMPOSANTS
        - LIEN D'ACHAT

    *   - :ref:`cpn_esp32_wroom_32e`
        - |link_esp32_wroom_32e_buy|
    *   - :ref:`cpn_esp32_camera_extension`
        - |link_esp32_extension_board|
    *   - :ref:`cpn_breadboard`
        - |link_breadboard_buy|
    *   - :ref:`cpn_wires`
        - |link_wires_buy|
    *   - :ref:`cpn_resistor`
        - |link_resistor_buy|
    *   - :ref:`cpn_thermistor`
        - |link_thermistor_buy|


**Pins disponibles**

* **Pins disponibles**

    Voici une liste des broches disponibles sur la carte ESP32 pour ce projet.

    .. list-table::
        :widths: 5 15

        *   - Pins disponibles
            - IO14, IO25, I35, I34, I39, I36


* **Strapping Pins**

    Les broches suivantes sont des broches de configuration, qui affectent le processus de d√©marrage de l'ESP32 lors de la mise sous tension ou de la r√©initialisation. Cependant, une fois que l'ESP32 a d√©marr√© avec succ√®s, elles peuvent √™tre utilis√©es comme broches ordinaires.

    .. list-table::
        :widths: 5 15

        *   - Strapping Pins
            - IO0, IO12


**Sch√©ma**

.. image:: ../../img/circuit/circuit_5.10_thermistor.png

Lorsque la temp√©rature augmente, la r√©sistance du thermistor diminue, ce qui fait diminuer la valeur lue sur I35. De plus, en utilisant une formule, vous pouvez convertir la valeur analogique en temp√©rature et l'afficher.

**C√¢blage**

.. image:: ../../img/wiring/5.10_thermistor_bb.png


.. note::
    * Le thermistor est noir et marqu√© 103.
    * Les anneaux de couleur de la r√©sistance de 10K ohms sont rouge, noir, noir, rouge et marron.

**Code**

.. note::

    * Ouvrez le fichier ``5.10_thermistor.ino`` sous le chemin ``esp32-starter-kit-main\c\codes\5.10_thermistor``.
    * Apr√®s avoir s√©lectionn√© la carte (ESP32 Dev Module) et le port appropri√©, cliquez sur le bouton **T√©l√©verser**.
    * :ref:`unknown_com_port`

.. raw:: html

    <iframe src=https://create.arduino.cc/editor/sunfounder01/d0407e3b-cd1e-4f5e-a7b6-391da394339b/preview?embed style="height:510px;width:100%;margin:10px 0" frameborder=0></iframe>


Apr√®s le t√©l√©versement r√©ussi du code, le moniteur s√©rie affichera les temp√©ratures en Celsius et Fahrenheit.

**Comment √ßa marche ?**

Chaque thermistor a une r√©sistance normale. Ici, elle est de 10k ohms, mesur√©e √† 25 degr√©s Celsius.

Lorsque la temp√©rature augmente, la r√©sistance du thermistor diminue. Ensuite, les donn√©es de tension sont converties en quantit√©s num√©riques par l'adaptateur A/D.

La temp√©rature en Celsius ou Fahrenheit est obtenue via la programmation.

Voici la relation entre la r√©sistance et la temp√©rature :

    **RT =RN expB(1/TK - 1/TN)** 

    * **RT** est la r√©sistance du thermistor NTC lorsque la temp√©rature est **TK**.
    * **RN** est la r√©sistance du thermistor NTC √† la temp√©rature nominale TN. Ici, la valeur de RN est de 10k.
    * **TK** est une temp√©rature en Kelvin et l'unit√© est K. Ici, la valeur de **TK** est ``273.15 + degr√© Celsius``.
    * **TN** est une temp√©rature nominale en Kelvin; l'unit√© est √©galement K. Ici, la valeur de TN est ``273.15+25``.
    * Et **B(beta)**, la constante mat√©rielle du thermistor NTC, est √©galement appel√©e indice de sensibilit√© thermique avec une valeur num√©rique de ``3950``.
    * **exp** est l'abr√©viation de l'exponentielle, et le nombre de base ``e`` est un nombre naturel et vaut environ 2.7.

    Convertissez cette formule ``TK=1/(ln(RT/RN)/B+1/TN)`` pour obtenir la temp√©rature en Kelvin, moins 273.15 pour obtenir les degr√©s Celsius.

Cette relation est une formule empirique. Elle est pr√©cise uniquement lorsque la temp√©rature et la r√©sistance sont dans la plage effective.

**En savoir plus**

Vous pouvez √©galement afficher les temp√©ratures calcul√©es en Celsius et Fahrenheit sur le module I2C LCD1602.

.. note::

    * Vous pouvez ouvrir le fichier ``5.10_thermistor_lcd.ino`` sous le chemin ``euler-kit/arduino/5.10_thermistor_lcd``.
    * Apr√®s avoir s√©lectionn√© la carte (ESP32 Dev Module) et le port appropri√©, cliquez sur le bouton **T√©l√©verser**.
    * :ref:`unknown_com_port`
    * La biblioth√®que ``LiquidCrystal I2C`` est utilis√©e ici, vous pouvez l'installer √† partir du **Gestionnaire de Biblioth√®ques**.

.. raw:: html

    <iframe src=https://create.arduino.cc/editor/sunfounder01/93344677-8c5d-41d7-a833-f6365495d344/preview?embed style="height:510px;width:100%;margin:10px 0" frameborder=0></iframe>

