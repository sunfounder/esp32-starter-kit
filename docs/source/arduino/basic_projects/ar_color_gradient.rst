.. note::

    Bonjour, bienvenue dans la communaut√© SunFounder Raspberry Pi & Arduino & ESP32 sur Facebook ! Plongez dans l'univers de Raspberry Pi, Arduino et ESP32 avec d'autres passionn√©s.

    **Pourquoi nous rejoindre ?**

    - **Support d'experts** : R√©solvez les probl√®mes apr√®s-vente et les d√©fis techniques avec l'aide de notre communaut√© et de notre √©quipe.
    - **Apprendre et partager** : √âchangez des conseils et des tutoriels pour am√©liorer vos comp√©tences.
    - **Aper√ßus exclusifs** : Acc√©dez en avant-premi√®re aux annonces de nouveaux produits et aux avant-go√ªts.
    - **R√©ductions sp√©ciales** : Profitez de r√©ductions exclusives sur nos derniers produits.
    - **Promotions festives et concours** : Participez √† des concours et √† des promotions sp√©ciales pour les f√™tes.

    üëâ Pr√™t √† explorer et cr√©er avec nous ? Cliquez sur [|link_sf_facebook|] et rejoignez-nous d√®s aujourd'hui !

.. _ar_color_gradient:

6.5 D√©grad√© de Couleurs
==============================================
√ätes-vous pr√™t √† d√©couvrir un monde de couleurs ? Ce projet vous emm√®nera 
dans un voyage magique o√π vous pourrez contr√¥ler une LED RGB et obtenir 
des transitions de couleurs fluides. Que vous cherchiez √† ajouter des couleurs 
√† votre d√©coration int√©rieure ou que vous souhaitiez un projet de programmation 
amusant, ce projet est fait pour vous. Plongeons ensemble dans ce monde color√© !

**Composants N√©cessaires**

Pour ce projet, nous avons besoin des composants suivants.

Il est d√©finitivement pratique d'acheter un kit complet, voici le lien :

.. list-table::
    :widths: 20 20 20
    :header-rows: 1

    *   - Nom	
        - √âL√âMENTS DANS CE KIT
        - LIEN
    *   - Kit de d√©marrage ESP32
        - 320+
        - |link_esp32_starter_kit|

Vous pouvez √©galement les acheter s√©par√©ment via les liens ci-dessous.

.. list-table::
    :widths: 30 20
    :header-rows: 1

    *   - INTRODUCTION AUX COMPOSANTS
        - LIEN D'ACHAT

    *   - :ref:`cpn_esp32_wroom_32e`
        - |link_esp32_wroom_32e_buy|
    *   - :ref:`cpn_esp32_camera_extension`
        - |link_esp32_extension_board|
    *   - :ref:`cpn_breadboard`
        - |link_breadboard_buy|
    *   - :ref:`cpn_wires`
        - |link_wires_buy|
    *   - :ref:`cpn_pot`
        - |link_potentiometer_buy|
    *   - :ref:`cpn_rgb`
        - |link_rgb_led_buy|

**Sch√©ma**

.. image:: ../../img/circuit/circuit_6.5_color_gradient_ar.png

**C√¢blage**

.. image:: ../../components/img/rgb_pin.jpg
    :width: 200
    :align: center

La LED RGB a 4 broches : la broche la plus longue est la cathode commune, qui est g√©n√©ralement connect√©e √† la masse (GND); la broche √† gauche de la plus longue est la Rouge; et les deux broches √† droite sont la Verte et la Bleue.

.. image:: ../../img/wiring/6.5_color_rgb_bb.png


**Code**

.. note::

    * Vous pouvez ouvrir le fichier ``6.5_color_gradient.ino`` sous le chemin ``esp32-starter-kit-main\c\codes\6.5_color_gradient``.
    * Apr√®s avoir s√©lectionn√© la carte (ESP32 Dev Module) et le port appropri√©, cliquez sur le bouton **Upload**.
    * :ref:`unknown_com_port`

.. raw:: html
    
    <iframe src=https://create.arduino.cc/editor/sunfounder01/a8402b92-8884-4ba0-b09c-e596e97e0af8/preview?embed style="height:510px;width:100%;margin:10px 0" frameborder=0></iframe>
    
Ce projet utilise une LED RGB et un potentiom√®tre pour cr√©er un effet de m√©lange de couleurs. Le potentiom√®tre est utilis√© pour ajuster la valeur de teinte de la LED, qui est ensuite convertie en valeurs RGB √† l'aide d'une fonction de conversion des couleurs. Les valeurs RGB sont ensuite utilis√©es pour mettre √† jour la couleur de la LED.

**Comment √ßa marche ?**

Ce projet se base sur le projet :ref:`ar_rgb` en ajoutant un potentiom√®tre pour ajuster la valeur de teinte de la LED. La valeur de teinte est ensuite convertie en valeurs RGB √† l'aide d'une fonction de conversion des couleurs.

#. Dans la fonction loop, lisez la valeur du potentiom√®tre et convertissez-la en valeur de teinte (0-360).

    .. code-block:: arduino

        int knobValue = analogRead(KNOB_PIN);
        float hueValue = (float) knobValue / 4095.0;
        int hue = (int) (hueValue * 360);

#. Convertissez la valeur de teinte en valeurs RGB √† l'aide de la fonction ``HUEtoRGB()``, et mettez √† jour la LED avec les nouvelles valeurs de couleur.

    .. code-block:: arduino

        int red, green, blue;
        HUEtoRGB(hue, &red, &green, &blue);
        setColor(red, green, blue);

#. La fonction ``setColor()`` d√©finit la valeur des canaux rouge, vert et bleu √† l'aide de la biblioth√®que ``LEDC``.

    .. code-block:: arduino

        void setColor(int red, int green, int blue) {
            ledcWrite(redPin, red);
            ledcWrite(greenPin, green);
            ledcWrite(bluePin, blue);
        }

    
#. La fonction ``HUEtoRGB`` convertit une valeur de teinte en valeurs RGB en utilisant le mod√®le de couleur HSL.

    .. code-block:: arduino

        void HUEtoRGB(int hue, int* red, int* green, int* blue) {
            float h = (float) hue / 60.0;
            float c = 1.0;
            float x = c * (1.0 - fabs(fmod(h, 2.0) - 1.0));
            float r, g, b;
            if (h < 1.0) {
                r = c;
                g = x;
                b = 0;
        ...

