.. note::

    Bonjour, bienvenue dans la communaut√© des passionn√©s de SunFounder Raspberry Pi & Arduino & ESP32 sur Facebook ! Plongez plus profond√©ment dans Raspberry Pi, Arduino et ESP32 avec d'autres passionn√©s.

    **Pourquoi nous rejoindre ?**

    - **Support d'experts** : R√©solvez les probl√®mes apr√®s-vente et les d√©fis techniques avec l'aide de notre communaut√© et de notre √©quipe.
    - **Apprendre et partager** : √âchangez des conseils et des tutoriels pour am√©liorer vos comp√©tences.
    - **Aper√ßus exclusifs** : Acc√©dez en avant-premi√®re aux annonces de nouveaux produits et aux avant-go√ªts.
    - **R√©ductions sp√©ciales** : Profitez de r√©ductions exclusives sur nos derniers produits.
    - **Promotions festives et concours** : Participez √† des concours et √† des promotions sp√©ciales pour les f√™tes.

    üëâ Pr√™t √† explorer et cr√©er avec nous ? Cliquez sur [|link_sf_facebook|] et rejoignez-nous d√®s aujourd'hui !

.. _ar_fruit_piano:

6.1 Piano de Fruits
========================

Avez-vous d√©j√† voulu jouer du piano mais n'en avez pas les moyens ? Ou peut-√™tre voulez-vous simplement vous amuser avec un piano en fruits DIY ? Eh bien, ce projet est fait pour vous !

Avec seulement quelques capteurs tactiles sur la carte ESP32, vous pouvez maintenant jouer vos airs pr√©f√©r√©s et profiter de l'exp√©rience de jouer du piano sans vous ruiner.

**Composants n√©cessaires**

Pour ce projet, nous avons besoin des composants suivants.

Il est d√©finitivement pratique d'acheter un kit complet, voici le lien :

.. list-table::
    :widths: 20 20 20
    :header-rows: 1

    *   - Nom	
        - √âL√âMENTS DANS CE KIT
        - LIEN
    *   - Kit de d√©marrage ESP32
        - 320+
        - |link_esp32_starter_kit|

Vous pouvez √©galement les acheter s√©par√©ment via les liens ci-dessous.

.. list-table::
    :widths: 30 20
    :header-rows: 1

    *   - INTRODUCTION AUX COMPOSANTS
        - LIEN D'ACHAT

    *   - :ref:`cpn_esp32_wroom_32e`
        - |link_esp32_wroom_32e_buy|
    *   - :ref:`cpn_esp32_camera_extension`
        - |link_esp32_extension_board|
    *   - :ref:`cpn_wires`
        - |link_wires_buy|
    *   - :ref:`cpn_resistor`
        - |link_resistor_buy|
    *   - :ref:`cpn_buzzer`
        - |link_passive_buzzer_buy|
    *   - :ref:`cpn_transistor`
        - |link_transistor_buy|

**√Ä propos des broches tactiles**

Le microcontr√¥leur ESP32 dispose de fonctionnalit√©s de capteur tactile int√©gr√©es, qui vous permettent d'utiliser certaines broches de la carte comme entr√©es tactiles. Le capteur tactile fonctionne en mesurant les changements de capacit√© sur les broches tactiles, caus√©s par les propri√©t√©s √©lectriques du corps humain.

Voici quelques caract√©ristiques cl√©s du capteur tactile sur l'ESP32 :

* **Nombre de broches tactiles**

    L'ESP32 dispose de jusqu'√† 10 broches tactiles, selon la carte sp√©cifique. Les broches tactiles sont g√©n√©ralement √©tiquet√©es avec un "T" suivi d'un num√©ro.

    * GPIO4: TOUCH0
    * GPIO0ÔºöTOUCH1
    * GPIO2: TOUCH2
    * GPIO15: TOUCH3
    * GPIO13: TOUCH4
    * GPIO12: TOUCH5
    * GPIO14: TOUCH6
    * GPIO27: TOUCH7
    * GPIO33: TOUCH8
    * GPIO32: TOUCH9

    .. note::
        Les broches GPIO0 et GPIO2 sont utilis√©es pour le bootstrap et le flashage du firmware sur l'ESP32, respectivement. Ces broches sont √©galement connect√©es √† la LED et au bouton int√©gr√©s. Par cons√©quent, il n'est g√©n√©ralement pas recommand√© d'utiliser ces broches √† d'autres fins, car cela pourrait interf√©rer avec le fonctionnement normal de la carte.

* **Sensibilit√©**

    Le capteur tactile de l'ESP32 est tr√®s sensible et peut d√©tecter m√™me de petits changements de capacit√©. La sensibilit√© peut √™tre ajust√©e √† l'aide de param√®tres logiciels.

* **Protection ESD**

    Les broches tactiles de l'ESP32 disposent d'une protection ESD (d√©charge √©lectrostatique) int√©gr√©e, qui aide √† pr√©venir les dommages √† la carte caus√©s par l'√©lectricit√© statique.

* **Multitouch**

    Le capteur tactile de l'ESP32 prend en charge le multitouch, ce qui signifie que vous pouvez d√©tecter plusieurs √©v√©nements tactiles simultan√©ment.

**Sch√©ma**

.. image:: ../../img/circuit/circuit_6.1_fruit_piano.png

L'id√©e derri√®re ce projet est d'utiliser des capteurs tactiles pour d√©tecter quand un utilisateur touche une broche sp√©cifique. 
Chaque broche tactile est associ√©e √† une note sp√©cifique, et lorsque l'utilisateur touche une broche, 
la note correspondante est jou√©e sur le buzzer passif. 
Le r√©sultat est une fa√ßon simple et abordable de profiter de l'exp√©rience de jouer du piano.

**C√¢blage**

.. image:: ../../img/wiring/6.1_fruit_piano_bb.png

Dans ce projet, vous devez retirer l'ESP32 WROOM 32E de la carte d'extension puis l'ins√©rer dans la plaque de montage. 
C'est parce que certaines broches sur la carte d'extension sont connect√©es √† des r√©sistances, 
ce qui affectera la capacit√© des broches.

**Code**

.. note::

    * Vous pouvez ouvrir le fichier ``6.1_fruit_piano.ino`` sous le chemin ``esp32-starter-kit-main\c\codes\6.1_fruit_piano`` directement.
    * Ou copiez ce code dans l'IDE Arduino.

.. raw:: html

    <iframe src=https://create.arduino.cc/editor/sunfounder01/3e06ce6c-268a-4fdc-99d0-6d74f68265e2/preview?embed style="height:510px;width:100%;margin:10px 0" frameborder=0></iframe>

Vous pouvez connecter des fruits √† ces broches ESP32 : 4, 15, 13, 12, 14, 27, 33, 32.

Lorsque le script s'ex√©cute, toucher ces fruits jouera les notes C, D, E, F, G, A, B et C5.

**Comment √ßa marche ?**

* ``touchRead(uint8_t pin);``

    Cette fonction obtient les donn√©es du capteur tactile. Chaque capteur tactile a un compteur pour compter le nombre de cycles de charge/d√©charge. 
    Lorsque le pad est **touch√©**, la valeur dans le compteur changera en raison de la capacit√© √©quivalente plus grande. 
    Le changement des donn√©es d√©termine si le pad a √©t√© touch√© ou non.

    * ``pin`` GPIO √† lire la valeur TOUCH

    Cette fonction renvoie une valeur entre 0 et 4095, une valeur plus basse indiquant une entr√©e tactile plus forte.

.. note::
    Le ``seuil`` doit √™tre ajust√© en fonction de la conductivit√© des diff√©rents fruits.

    Vous pouvez d'abord ex√©cuter le script pour voir les valeurs imprim√©es par la console.

    .. code-block::

      0 : 60
      1 : 62
      2 : 71
      3 : 74
      4 : 73
      5 : 78
      6 : 80
      7 : 82

    Apr√®s avoir touch√© les fruits sur les broches 12, 14 et 27, les valeurs imprim√©es sont les suivantes. Par cons√©quent, j'ai r√©gl√© le ``seuil`` √† 30, ce qui signifie que lorsqu'une valeur inf√©rieure √† 30 est d√©tect√©e, elle est consid√©r√©e comme touch√©e et le buzzer √©mettra diff√©rentes notes.

    .. code-block::

      0 : 60
      1 : 62
      2 : 71
      3 : 9
      4 : 12
      5 : 14
      6 : 75
      7 : 78
