.. note::

    Bonjour, bienvenue dans la communaut√© des passionn√©s de Raspberry Pi, Arduino et ESP32 de SunFounder sur Facebook ! Plongez plus profond√©ment dans l'univers des Raspberry Pi, Arduino et ESP32 avec d'autres passionn√©s.

    **Pourquoi nous rejoindre ?**

    - **Support d'experts** : R√©solvez les probl√®mes apr√®s-vente et les d√©fis techniques avec l'aide de notre communaut√© et de notre √©quipe.
    - **Apprendre et partager** : √âchangez des astuces et des tutoriels pour am√©liorer vos comp√©tences.
    - **Aper√ßus exclusifs** : B√©n√©ficiez d'un acc√®s anticip√© aux annonces de nouveaux produits et aux avant-premi√®res.
    - **R√©ductions sp√©ciales** : Profitez de r√©ductions exclusives sur nos derniers produits.
    - **Promotions festives et cadeaux** : Participez √† des cadeaux et √† des promotions de f√™tes.

    üëâ Pr√™t √† explorer et √† cr√©er avec nous ? Cliquez sur [|link_sf_facebook|] et rejoignez-nous d√®s aujourd'hui !

.. _ar_motor:

4.1 Moteur
===========================

Dans ce projet captivant, nous allons explorer comment piloter un moteur en utilisant le L293D.

Le L293D est un circuit int√©gr√© (IC) polyvalent couramment utilis√© pour le contr√¥le des moteurs dans les projets √©lectroniques et robotiques. Il peut piloter deux moteurs dans les deux sens, ce qui en fait un choix populaire pour les applications n√©cessitant un contr√¥le pr√©cis des moteurs.

√Ä la fin de ce projet fascinant, vous aurez acquis une compr√©hension approfondie de la mani√®re dont les signaux num√©riques et les signaux PWM peuvent √™tre utilis√©s efficacement pour contr√¥ler les moteurs. Ces connaissances inestimables constitueront une base solide pour vos futures aventures en robotique et m√©catronique. Attachez vos ceintures et pr√©parez-vous √† plonger dans le monde passionnant du contr√¥le des moteurs avec le L293D !

**Composants n√©cessaires**

Pour ce projet, nous avons besoin des composants suivants. 

Il est certainement pratique d'acheter un kit complet, voici le lien : 

.. list-table::
    :widths: 20 20 20
    :header-rows: 1

    *   - Nom	
        - √âL√âMENTS DANS CE KIT
        - LIEN
    *   - Kit de d√©marrage ESP32
        - 320+
        - |link_esp32_starter_kit|

Vous pouvez √©galement les acheter s√©par√©ment aux liens ci-dessous.

.. list-table::
    :widths: 30 20
    :header-rows: 1

    *   - INTRODUCTION DES COMPOSANTS
        - LIEN D'ACHAT

    *   - :ref:`cpn_esp32_wroom_32e`
        - |link_esp32_wroom_32e_buy|
    *   - :ref:`cpn_esp32_camera_extension`
        - |link_esp32_extension_board|
    *   - :ref:`cpn_breadboard`
        - |link_breadboard_buy|
    *   - :ref:`cpn_wires`
        - |link_wires_buy|
    *   - :ref:`cpn_motor`
        - |link_motor_buy|
    *   - :ref:`cpn_l293d`
        - \-

**Pins disponibles**

Voici une liste des pins disponibles sur la carte ESP32 pour ce projet.

.. list-table::
    :widths: 5 20 

    * - Pins disponibles
      - IO13, IO14, IO27, IO26, IO25, IO33, IO32, IO15, IO2, IO0, IO4, IO5, IO18, IO19, IO21, IO22, IO23


**Sch√©ma**

.. image:: ../../img/circuit/circuit_4.1_motor_l293d.png


    
**C√¢blage**

.. note:: 

  Comme le moteur n√©cessite un courant relativement √©lev√©, il est n√©cessaire d'ins√©rer d'abord la batterie, puis de faire glisser l'interrupteur sur la carte d'extension en position ON pour activer l'alimentation de la batterie. 

.. image:: ../../img/wiring/4.1_motor_l293d_bb.png



**Code**

.. note::

    * Ouvrez le fichier ``4.1_motor.ino`` sous le chemin ``esp32-starter-kit-main\c\codes\4.1_motor``.
    * Apr√®s avoir s√©lectionn√© la carte (ESP32 Dev Module) et le port appropri√©, cliquez sur le bouton **Upload**.
    * :ref:`unknown_com_port`
    
    
.. raw:: html
    
  <iframe src=https://create.arduino.cc/editor/sunfounder01/13364fc5-5094-4a84-90ce-07a5f85556dc/preview?embed style="height:510px;width:100%;margin:10px 0" frameborder=0></iframe>



Une fois le code t√©l√©charg√© avec succ√®s, vous observerez le moteur tourner dans le sens horaire pendant une seconde, puis dans le sens antihoraire pendant une seconde, suivi d'une pause de deux secondes. Cette s√©quence d'actions se poursuivra en boucle infinie.


**En savoir plus**

En plus de simplement faire tourner le moteur dans le sens horaire et antihoraire, vous pouvez √©galement contr√¥ler la vitesse de rotation du moteur en utilisant la modulation de largeur d'impulsion (PWM) sur la broche de contr√¥le, comme montr√© ci-dessous.

.. note::

    * Ouvrez le fichier ``4.1_motor_pwm.ino`` sous le chemin ``esp32-starter-kit-main\c\codes\4.1_motor_pwm``.
    * Apr√®s avoir s√©lectionn√© la carte (ESP32 Dev Module) et le port appropri√©, cliquez sur le bouton **Upload**.
    * :ref:`unknown_com_port`
    
    
.. raw:: html

  <iframe src=https://create.arduino.cc/editor/sunfounder01/32c262fd-9975-4137-9973-8b62d7240fee/preview?embed style="height:510px;width:100%;margin:10px 0" frameborder=0></iframe>


Le code pr√©c√©dent d√©finit directement les deux broches du moteur √† des niveaux de tension haut ou bas pour contr√¥ler la rotation et l'arr√™t du moteur.

Ici, nous utilisons le p√©riph√©rique de contr√¥le des LED (|link_ledc|) pour g√©n√©rer des signaux PWM afin de contr√¥ler la vitesse du moteur. √Ä travers deux boucles ``for``, le cycle de travail du canal A est augment√© ou diminu√© de 0 √† 255 tandis que le canal B reste √† 0.

De cette mani√®re, vous pouvez observer le moteur augmenter progressivement sa vitesse jusqu'√† 255, puis la diminuer √† 0, en boucle infinie.

Si vous voulez que le moteur tourne dans le sens oppos√©, il vous suffit d'inverser les valeurs du canal A et du canal B.

