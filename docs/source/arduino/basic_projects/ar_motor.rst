.. note::

    Hallo und willkommen in der SunFounder Raspberry Pi & Arduino & ESP32 Enthusiasten-Gemeinschaft auf Facebook! Tauchen Sie tiefer ein in die Welt von Raspberry Pi, Arduino und ESP32 mit anderen Enthusiasten.

    **Warum beitreten?**

    - **Expertenunterst√ºtzung**: L√∂sen Sie Nachverkaufsprobleme und technische Herausforderungen mit Hilfe unserer Gemeinschaft und unseres Teams.
    - **Lernen & Teilen**: Tauschen Sie Tipps und Anleitungen aus, um Ihre F√§higkeiten zu verbessern.
    - **Exklusive Vorschauen**: Erhalten Sie fr√ºhzeitigen Zugang zu neuen Produktank√ºndigungen und exklusiven Einblicken.
    - **Spezialrabatte**: Genie√üen Sie exklusive Rabatte auf unsere neuesten Produkte.
    - **Festliche Aktionen und Gewinnspiele**: Nehmen Sie an Gewinnspielen und Feiertagsaktionen teil.

    üëâ Sind Sie bereit, mit uns zu erkunden und zu erschaffen? Klicken Sie auf [|link_sf_facebook|] und treten Sie heute bei!

.. _ar_motor:

4.1 Motor
===========================

In diesem spannenden Projekt werden wir erforschen, wie man einen Motor mit dem L293D antreibt.

Der L293D ist ein vielseitiger integrierter Schaltkreis (IC), der h√§ufig f√ºr die Motorsteuerung in Elektronik- und Robotikprojekten verwendet wird. Er kann zwei Motoren sowohl vorw√§rts als auch r√ºckw√§rts antreiben, was ihn zu einer beliebten Wahl f√ºr Anwendungen macht, die eine pr√§zise Motorsteuerung erfordern.

Am Ende dieses fesselnden Projekts werden Sie ein gr√ºndliches Verst√§ndnis daf√ºr haben, wie digitale Signale und PWM-Signale effektiv zur Steuerung von Motoren eingesetzt werden k√∂nnen. Dieses unsch√§tzbare Wissen wird eine solide Grundlage f√ºr Ihre zuk√ºnftigen Unternehmungen in Robotik und Mechatronik sein. Schnallen Sie sich an und machen Sie sich bereit, in die aufregende Welt der Motorsteuerung mit dem L293D einzutauchen!

**Ben√∂tigte Komponenten**

F√ºr dieses Projekt ben√∂tigen wir die folgenden Komponenten.

Es ist definitiv praktisch, ein ganzes Kit zu kaufen, hier ist der Link:

.. list-table::
    :widths: 20 20 20
    :header-rows: 1

    *   - Name
        - ARTIKEL IN DIESEM KIT
        - LINK
    *   - ESP32 Starter Kit
        - 320+
        - |link_esp32_starter_kit|

Sie k√∂nnen sie auch separat √ºber die untenstehenden Links kaufen.

.. list-table::
    :widths: 30 20
    :header-rows: 1

    *   - KOMPONENTENVORSTELLUNG
        - KAUF-LINK

    *   - :ref:`cpn_esp32_wroom_32e`
        - |link_esp32_wroom_32e_buy|
    *   - :ref:`cpn_esp32_camera_extension`
        - |link_esp32_extension_board|
    *   - :ref:`cpn_breadboard`
        - |link_breadboard_buy|
    *   - :ref:`cpn_wires`
        - |link_wires_buy|
    *   - :ref:`cpn_motor`
        - |link_motor_buy|
    *   - :ref:`cpn_l293d`
        - \-

**Verf√ºgbare Pins**

Hier ist eine Liste der verf√ºgbaren Pins auf dem ESP32-Board f√ºr dieses Projekt.

.. list-table::
    :widths: 5 20 

    * - Verf√ºgbare Pins
      - IO13, IO14, IO27, IO26, IO25, IO33, IO32, IO15, IO2, IO0, IO4, IO5, IO18, IO19, IO21, IO22, IO23

**Schaltplan**

.. image:: ../../img/circuit/circuit_4.1_motor_l293d.png

    
**Verdrahtung**

.. note:: 

  Da der Motor einen relativ hohen Strom ben√∂tigt, ist es notwendig, zuerst die Batterie einzulegen und dann den Schalter auf dem Erweiterungsboard auf die Position ON zu schieben, um die Batterieversorgung zu aktivieren.

.. image:: ../../img/wiring/4.1_motor_l293d_bb.png



**Code**

.. note::

    * √ñffnen Sie die Datei ``4.1_motor.ino`` unter dem Pfad ``esp32-starter-kit-main\c\codes\4.1_motor``.
    * Nachdem Sie das Board (ESP32 Dev Module) und den entsprechenden Port ausgew√§hlt haben, klicken Sie auf den **Upload**-Knopf.
    * :ref:`unknown_com_port`
    
    
.. raw:: html
    
  <iframe src=https://create.arduino.cc/editor/sunfounder01/13364fc5-5094-4a84-90ce-07a5f85556dc/preview?embed style="height:510px;width:100%;margin:10px 0" frameborder=0></iframe>



Nachdem der Code erfolgreich hochgeladen wurde, werden Sie beobachten, dass der Motor sich eine Sekunde lang im Uhrzeigersinn dreht, dann eine Sekunde lang gegen den Uhrzeigersinn, gefolgt von einer zweisek√ºndigen Pause. Diese Sequenz von Aktionen wird in einer endlosen Schleife fortgesetzt.


**Mehr erfahren**

Zus√§tzlich zum einfachen Drehen des Motors im und gegen den Uhrzeigersinn k√∂nnen Sie auch die Geschwindigkeit der Motordrehung steuern, indem Sie auf dem Steuerpin eine Pulsweitenmodulation (PWM) verwenden, wie unten gezeigt.

.. note::

    * √ñffnen Sie die Datei ``4.1_motor_pwm.ino`` unter dem Pfad ``esp32-starter-kit-main\c\codes\4.1_motor_pwm``.
    * Nachdem Sie das Board (ESP32 Dev Module) und den entsprechenden Port ausgew√§hlt haben, klicken Sie auf den **Upload**-Knopf.
    * :ref:`unknown_com_port`
    
    
.. raw:: html

  <iframe src=https://create.arduino.cc/editor/sunfounder01/32c262fd-9975-4137-9973-8b62d7240fee/preview?embed style="height:510px;width:100%;margin:10px 0" frameborder=0></iframe>


Der vorherige Code setzt direkt die beiden Pins des Motors auf hohe oder niedrige Spannungspegel, um die Drehung und das Anhalten des Motors zu steuern.

Hier verwenden wir das |link_ledc| (LED-Steuerung) Peripherieger√§t, um PWM-Signale zu erzeugen, um die Motorgeschwindigkeit zu steuern. Durch zwei ``for`` Schleifen wird der Tastgrad von Kanal A von 0 auf 255 erh√∂ht oder verringert, w√§hrend Kanal B bei 0 bleibt.

Auf diese Weise k√∂nnen Sie beobachten, wie der Motor seine Geschwindigkeit allm√§hlich auf 255 erh√∂ht und dann auf 0 verringert, unendlich so weiterlaufend.

Wenn Sie m√∂chten, dass der Motor sich in die entgegengesetzte Richtung dreht, tauschen Sie einfach die Werte von Kanal A und Kanal B.

