.. note::

    Bonjour, bienvenue dans la communaut√© des passionn√©s de SunFounder Raspberry Pi & Arduino & ESP32 sur Facebook ! Plongez plus profond√©ment dans l'univers de Raspberry Pi, Arduino et ESP32 avec d'autres passionn√©s.

    **Pourquoi nous rejoindre ?**

    - **Support d'experts** : R√©solvez les probl√®mes apr√®s-vente et les d√©fis techniques avec l'aide de notre communaut√© et de notre √©quipe.
    - **Apprendre et partager** : √âchangez des conseils et des tutoriels pour am√©liorer vos comp√©tences.
    - **Aper√ßus exclusifs** : B√©n√©ficiez d'un acc√®s anticip√© aux annonces de nouveaux produits et aux avant-premi√®res.
    - **R√©ductions sp√©ciales** : Profitez de r√©ductions exclusives sur nos derniers produits.
    - **Promotions festives et cadeaux** : Participez √† des concours et promotions de vacances.

    üëâ Pr√™t √† explorer et cr√©er avec nous ? Cliquez sur [|link_sf_facebook|] et rejoignez-nous d√®s aujourd'hui !

.. _iot_owm:

8.1 M√©t√©o en Temps R√©el avec @OpenWeatherMap
====================================================

Le projet IoT Open Weather Display utilise la carte ESP32 et un module I2C LCD1602 pour cr√©er un affichage des informations m√©t√©orologiques r√©cup√©r√©es depuis l'API OpenWeatherMap.

Ce projet est une excellente introduction √† l'utilisation des API, √† la connectivit√© Wi-Fi et √† l'affichage des donn√©es sur un module LCD avec la carte ESP32. Avec l'IoT Open Weather Display, vous pouvez facilement acc√©der aux mises √† jour m√©t√©orologiques en temps r√©el, ce qui en fait une solution id√©ale pour les environnements domestiques ou professionnels.

**Composants Requis**

Pour ce projet, nous avons besoin des composants suivants. 

Il est certainement pratique d'acheter un kit complet, voici le lien :

.. list-table::
    :widths: 20 20 20
    :header-rows: 1

    *   - Nom	
        - ARTICLES DANS CE KIT
        - LIEN
    *   - Kit de d√©marrage ESP32
        - 320+
        - |link_esp32_starter_kit|

Vous pouvez √©galement les acheter s√©par√©ment √† partir des liens ci-dessous.

.. list-table::
    :widths: 30 20
    :header-rows: 1

    *   - INTRODUCTION DES COMPOSANTS
        - LIEN D'ACHAT

    *   - :ref:`cpn_esp32_wroom_32e`
        - |link_esp32_wroom_32e_buy|
    *   - :ref:`cpn_esp32_camera_extension`
        - |link_esp32_extension_board|
    *   - :ref:`cpn_wires`
        - |link_wires_buy|
    *   - :ref:`cpn_lcd`
        - |link_i2clcd1602_buy|

**Obtenez les Cl√©s API OpenWeather**

|link_openweather| est un service en ligne, propri√©t√© de OpenWeather Ltd, qui fournit des donn√©es m√©t√©orologiques mondiales via API, y compris les donn√©es m√©t√©orologiques actuelles, les pr√©visions, les nowcasts et les donn√©es m√©t√©orologiques historiques pour n'importe quel emplacement g√©ographique.

#. Visitez |link_openweather| pour vous connecter/cr√©er un compte.

    .. image:: img/OWM-1.png

#. Cliquez sur la page API depuis la barre de navigation.

    .. image:: img/OWM-2.png

#. Trouvez **Current Weather Data** et cliquez sur S'abonner.

    .. image:: img/OWM-3.png

#. Sous **Current weather and forecasts collection**, abonnez-vous au service appropri√©. Pour notre projet, la version gratuite suffit.

    .. image:: img/OWM-4.png

#. Copiez la cl√© depuis la page **API keys**.

    .. image:: img/OWM-5.png


**Compl√©tez votre Appareil**

#. Montez le circuit.

    .. image:: ../../img/wiring/2.6_i2clcd1602_bb.png
        :width: 800

#. Ouvrez le code.

    * Ouvrez le fichier ``iot_1_open_weather.ino`` situ√© dans le r√©pertoire ``esp32-starter-kit-main\c\codes\iot_1_open_weather``, ou copiez le code dans l'Arduino IDE.
    * Apr√®s avoir s√©lectionn√© la carte (ESP32 Dev Module) et le port appropri√©, cliquez sur le bouton **Upload**.
    * :ref:`unknown_com_port`
    * Les biblioth√®ques ``LiquidCrystal I2C`` et ``Arduino_JSON`` sont utilis√©es ici, vous pouvez les installer depuis le **Library Manager**.

    .. raw:: html

        <iframe src=https://create.arduino.cc/editor/sunfounder01/71b196ce-8a84-4577-af76-43988c7d3f80/preview?embed style="height:510px;width:100%;margin:10px 0" frameborder=0></iframe>
         

#. Trouvez les lignes suivantes et modifiez-les avec votre ``SSID`` et ``PASSWORD``.

    .. code-block::  Arduino

        // Remplacez les variables suivantes par votre combinaison SSID/Mot de passe
        const char* ssid = "SSID";
        const char* password = "PASSWORD";

#. Remplissez les cl√©s API que vous avez copi√©es pr√©c√©demment dans ``openWeatherMapApiKey``.

    .. code-block::  Arduino

        // Votre nom de domaine avec chemin URL ou adresse IP avec chemin
        String openWeatherMapApiKey = "<openWeatherMapApiKey>";

#. Remplacez par le code de votre pays et votre ville.

    .. code-block::  Arduino

        // Remplacez par le code de votre pays et votre ville
        // Trouvez le code de votre pays sur https://openweathermap.org/find
        String city = "CITY";
        String countryCode = "COUNTRY CODE";

#. Une fois le code ex√©cut√©, vous verrez l'heure et les informations m√©t√©orologiques de votre localisation sur l'I2C LCD1602.

.. note::
   Lorsque le code s'ex√©cute, si l'√©cran est vide, vous pouvez tourner le potentiom√®tre √† l'arri√®re du module pour augmenter le contraste.

