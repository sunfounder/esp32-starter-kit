.. note::

    ¬°Hola, bienvenido a la Comunidad de Aficionados a Raspberry Pi, Arduino y ESP32 de SunFounder en Facebook! Profundiza en Raspberry Pi, Arduino y ESP32 con otros entusiastas.

    **¬øPor qu√© unirse?**

    - **Soporte de expertos**: Resuelve problemas posventa y desaf√≠os t√©cnicos con ayuda de nuestra comunidad y equipo.
    - **Aprender y compartir**: Intercambia consejos y tutoriales para mejorar tus habilidades.
    - **Vistas previas exclusivas**: Obt√©n acceso anticipado a anuncios de nuevos productos y avances.
    - **Descuentos especiales**: Disfruta de descuentos exclusivos en nuestros productos m√°s nuevos.
    - **Promociones festivas y sorteos**: Participa en sorteos y promociones de fiestas.

    üëâ ¬øListo para explorar y crear con nosotros? Haz clic en [|link_sf_facebook|] y √∫nete hoy!

.. _ar_adafruit_io:

8.6 Monitoreo de Temperatura y Humedad con Adafruit IO
=============================================================

En este proyecto, te guiaremos sobre c√≥mo usar una plataforma de IoT popular. Hay muchas plataformas gratuitas (o de bajo costo) disponibles en l√≠nea para los entusiastas de la programaci√≥n. Algunos ejemplos son Adafruit IO, Blynk, Arduino Cloud, ThingSpeak, etc. El uso de estas plataformas es bastante similar. Aqu√≠, nos centraremos en Adafruit IO.

Escribiremos un programa de Arduino que utiliza el sensor DHT11 para enviar lecturas de temperatura y humedad al tablero de Adafruit IO. Tambi√©n puedes controlar un LED en el circuito a trav√©s de un interruptor en el tablero.

**Componentes Requeridos**

Para este proyecto, necesitaremos los siguientes componentes.

Definitivamente es conveniente comprar un kit completo, aqu√≠ est√° el enlace:

.. list-table::
    :widths: 20 20 20
    :header-rows: 1

    *   - Nombre	
        - ART√çCULOS EN ESTE KIT
        - ENLACE
    *   - Kit de Inicio ESP32
        - 320+
        - |link_esp32_starter_kit|

Tambi√©n puedes comprarlos por separado desde los enlaces a continuaci√≥n.

.. list-table::
    :widths: 30 20
    :header-rows: 1

    *   - INTRODUCCI√ìN DEL COMPONENTE
        - ENLACE DE COMPRA

    *   - :ref:`cpn_esp32_wroom_32e`
        - |link_esp32_wroom_32e_buy|
    *   - :ref:`cpn_esp32_camera_extension`
        - |link_esp32_extension_board|
    *   - :ref:`cpn_breadboard`
        - |link_breadboard_buy|
    *   - :ref:`cpn_wires`
        - |link_wires_buy|
    *   - :ref:`cpn_resistor`
        - |link_resistor_buy|
    *   - :ref:`cpn_led`
        - |link_led_buy|
    *   - :ref:`cpn_dht11`
        - |link_dht11_buy|

**Configuraci√≥n del Tablero**

#. Visita |link_adafruit_io|, luego haz clic en **Comenzar gratis** para crear una cuenta gratuita.

    .. image:: img/sp230516_102503.png

#. Completa el formulario para crear una cuenta.

    .. image:: img/sp230516_102629.png

#. Despu√©s de crear una cuenta en Adafruit, necesitar√°s reabrir Adafruit io. Haz clic en **Tableros**, luego en **Nuevo Tablero**.

    .. image:: img/sp230516_103347.png

#. Crea un **Nuevo Tablero**.

    .. image:: img/sp230516_103744.png

#. Ingresa al **Tablero** reci√©n creado y crea un nuevo bloque.

    .. image:: img/sp230516_104234.png

#. Crea 1 bloque **Interruptor**.

    .. image:: img/sp230516_105727.png

#. A continuaci√≥n, necesitar√°s crear un nuevo canal aqu√≠. Este interruptor se utilizar√° para controlar el LED, y nombraremos este canal "LED".

    .. image:: img/sp230516_105641.png

#. Verifica el canal **LED**, luego avanza al siguiente paso.

    .. image:: img/sp230516_105925.png

#. Completa la configuraci√≥n del bloque (principalmente T√≠tulo del Bloque, Texto de Encendido y Texto de Apagado), luego haz clic en el bot√≥n **Crear bloque** en la parte inferior derecha para finalizar.

    .. image:: img/sp230516_110124.png

#. Tambi√©n necesitaremos crear dos **Bloques de Texto** a continuaci√≥n. Se utilizar√°n para mostrar la temperatura y la humedad. Por lo tanto, crea dos canales denominados **temperatura** y **humedad**.

    .. image:: img/sp230516_110657.png

#. Despu√©s de la creaci√≥n, tu Tablero deber√≠a verse algo as√≠:

    .. image:: img/sp230516_111134.png

#. Puedes ajustar el dise√±o utilizando la opci√≥n **Editar Dise√±o** en el Tablero.

    .. image:: img/sp230516_111240.png

#. Haz clic en **CLAVE API**, y ver√°s tu nombre de usuario y **CLAVE API** mostrados. An√≥talos, ya que los necesitar√°s para tu c√≥digo.

    .. image:: img/sp230516_111641.png

**Ejecutando el C√≥digo**

#. Construye el circuito.

    .. image:: ../../img/wiring/iot_6_adafruit_io_bb.png

#. Luego, conecta el ESP32-WROOM-32E al ordenador mediante el cable USB.

    .. image:: ../../img/plugin_esp32.png

#. Abre el c√≥digo.

    * Abre el archivo ``iot_6_adafruit_io.ino`` ubicado en el directorio ``esp32-starter-kit-main\c\codes\iot_6_adafruit_io``, o copia el c√≥digo en el IDE de Arduino.
    * Despu√©s de seleccionar la placa (ESP32 Dev Module) y el puerto apropiado, haz clic en el bot√≥n **Subir**.
    * :ref:`unknown_com_port`
    * Aqu√≠ se utilizan la ``Biblioteca Adafruit_MQTT`` y la ``Biblioteca del sensor DHT``, puedes instalarlas desde el **Gestor de Bibliotecas**.

    .. raw:: html

        <iframe src=https://create.arduino.cc/editor/sunfounder01/4cf6ad03-250e-4fe9-aa04-0ca73b997843/preview?embed style="height:510px;width:100%;margin:10px 0" frameborder=0></iframe>


#. Encuentra las siguientes l√≠neas y reemplaza ``SSID`` y ``PASSWORD`` con los detalles espec√≠ficos de tu red WiFi.

    .. code-block::  Arduino

        /************************* WiFi Access Point *********************************/

        #define WLAN_SSID "SSID"
        #define WLAN_PASS "PASSWORD"

#. Luego reemplaza ``TU_NOMBRE_DE_USUARIO_ADAFRUIT_IO`` con tu nombre de usuario de Adafruit IO y ``TU_CLAVE_ADAFRUIT_IO`` con la **CLAVE API** que acabas de copiar.

    .. code-block::  Arduino

        // Adafruit IO Account Configuration
        // (to obtain these values, visit https://io.adafruit.com and click on Active Key)
        #define AIO_USERNAME "YOUR_ADAFRUIT_IO_USERNAME"
        #define AIO_KEY      "YOUR_ADAFRUIT_IO_KEY"

#. Despu√©s de seleccionar la placa correcta (ESP32 Dev Module) y el puerto correspondiente, haz clic en el bot√≥n **Subir** para cargar el programa a tu ESP32.

#. Una vez que el c√≥digo se haya subido con √©xito, observar√°s el siguiente mensaje en el monitor serial, indicando una comunicaci√≥n exitosa con Adafruit IO.
    
    .. code-block::

        Adafruit IO MQTTS (SSL/TLS) Example


        Connecting to xxxxx
        WiFi connected
        IP address: 
        192.168.18.76
        Connecting to MQTT... MQTT Connected!
        Temperature: 27.10
        Humidity: 61.00

#. Regresa a Adafruit IO. Ahora puedes observar las lecturas de temperatura y humedad en el tablero de control, o utilizar el interruptor de palanca LED para controlar el estado de encendido/apagado del LED externo conectado al circuito.

    .. image:: img/sp230516_143220.png

