.. note::

    Bonjour, bienvenue dans la communaut√© des passionn√©s de SunFounder Raspberry Pi & Arduino & ESP32 sur Facebook ! Plongez plus profond√©ment dans l'univers de Raspberry Pi, Arduino et ESP32 avec d'autres passionn√©s.

    **Pourquoi nous rejoindre ?**

    - **Support d'experts** : R√©solvez les probl√®mes apr√®s-vente et les d√©fis techniques avec l'aide de notre communaut√© et de notre √©quipe.
    - **Apprendre et partager** : √âchangez des conseils et des tutoriels pour am√©liorer vos comp√©tences.
    - **Aper√ßus exclusifs** : B√©n√©ficiez d'un acc√®s anticip√© aux annonces de nouveaux produits et aux avant-premi√®res.
    - **R√©ductions sp√©ciales** : Profitez de r√©ductions exclusives sur nos derniers produits.
    - **Promotions festives et cadeaux** : Participez √† des concours et promotions de vacances.

    üëâ Pr√™t √† explorer et cr√©er avec nous ? Cliquez sur [|link_sf_facebook|] et rejoignez-nous d√®s aujourd'hui !

.. _iot_intrusion_alert_system:

8.9 Syst√®me de notification d'intrusion bas√© sur Blynk
===============================================================

Ce projet d√©montre un simple syst√®me de d√©tection d'intrusion √† domicile utilisant un capteur de mouvement PIR (HC-SR501).
Lorsque le syst√®me est r√©gl√© en mode "Absence" via l'application Blynk, le capteur PIR surveille les mouvements.
Tout mouvement d√©tect√© d√©clenche une notification sur l'application Blynk, alertant l'utilisateur d'une intrusion potentielle.

**Composants requis**

Pour ce projet, nous avons besoin des composants suivants. 

Il est certainement pratique d'acheter un kit complet, voici le lien : 

.. list-table::
    :widths: 20 20 20
    :header-rows: 1

    *   - Nom	
        - ARTICLES DANS CE KIT
        - LIEN
    *   - Kit de d√©marrage ESP32
        - 320+
        - |link_esp32_starter_kit|

Vous pouvez √©galement les acheter s√©par√©ment √† partir des liens ci-dessous.

.. list-table::
    :widths: 30 20
    :header-rows: 1

    *   - INTRODUCTION DES COMPOSANTS
        - LIEN D'ACHAT

    *   - :ref:`cpn_esp32_wroom_32e`
        - |link_esp32_wroom_32e_buy|
    *   - :ref:`cpn_esp32_camera_extension`
        - |link_esp32_extension_board|
    *   - :ref:`cpn_wires`
        - |link_wires_buy|
    *   - :ref:`cpn_pir`
        - |link_pir_buy|


1. Assemblage du circuit
----------------------------

.. image:: ../../img/wiring/iot_9_blynk_bb.png
    :width: 60%
    :align: center

2. Configuration de Blynk
-------------------------------

**2.1 Initialisation de Blynk**

1. Allez sur la page |link_blynk| et s√©lectionnez **Sign Up FREE** ou **Enterprise Solution**.

    .. image:: img/09_blynk_access.png
        :width: 600
        :align: center

2. Entrez votre email pour commencer le processus d'inscription.

    .. image:: img/09_blynk_sign_in.png
        :align: center

3. V√©rifiez votre email pour une invitation et cliquez sur le lien **Create Password** dans l'email pour d√©finir votre mot de passe.

    .. image:: img/09_blynk_password.png
        :align: center

4. Apr√®s confirmation, un **Blynk Tour** commencera o√π vous pourrez rapidement apprendre certaines des fonctionnalit√©s cl√©s de Blynk.

    .. image:: img/09_blynk_tour.png
        :width: 600
        :align: center

5. Apr√®s avoir compl√©t√© le Blynk Tour, une fen√™tre appara√Ætra o√π vous pourrez choisir d'explorer les Blueprints ou de cliquer sur Quick Start pour connecter rapidement votre appareil. Cependant, dans ce cas, nous s√©lectionnerons "Have a look around first".

    .. image:: img/09_blynk_skip.png
        :align: center

**2.2 Cr√©ation d'un template**

1. Commencez par cr√©er un template dans Blynk. Suivez les √©tapes pour configurer le template **Intrusion Alert System**.

    .. image:: img/09_create_template_1_shadow.png
        :width: 600
        :align: center

2. Nommez votre template, choisissez **ESP32** comme mat√©riel, s√©lectionnez **WiFi** comme **Type de connexion**, puis cliquez sur **Done**.

   .. image:: img/09_create_template_2_shadow.png
        :width: 600
        :align: center

3. Entrez dans le template, o√π vous serez invit√© aux prochaines √©tapes. Cliquez sur **Configure template** pour t√©l√©charger une image de couverture, am√©liorer la description, et plus encore. Suivez les trois √©tapes restantes pour compl√©ter la configuration.

    .. image:: img/09_blynk_temp_steps.png
        :width: 600
        :align: center

**2.3 Configuration des flux de donn√©es (Datastreams)**

1. Ouvrez le nouveau template cr√©√© et allez √† la page de configuration des flux de donn√©es.

   .. image:: img/09_blynk_new_datastream.png
        :width: 600
        :align: center

2. Cliquez sur **New Datastream**, et dans la popup, s√©lectionnez **Virtual Pin**.

   .. image:: img/09_blynk_datastream_virtual.png
        :width: 600
        :align: center

3. Nommez le **Virtual Pin V0** comme **AwayMode** et r√©glez le **TYPE DE DONN√âES** sur **Integer**, avec des valeurs **MIN** et **MAX** de **0** et **1**.

   .. image:: img/09_create_template_shadow.png
        :width: 600
        :align: center

4. De la m√™me mani√®re, cr√©ez un autre **Virtual Pin** nomm√© **Current Status** et r√©glez le **TYPE DE DONN√âES** sur **String**.

   .. image:: img/09_datastream_1_shadow.png
        :width: 600
        :align: center

**2.4 Configuration du tableau de bord web**

1. Faites glisser et d√©posez le **widget Switch** et le **widget Label** sur le **tableau de bord web**.

   .. image:: img/09_web_dashboard_1_shadow.png
        :width: 600
        :align: center

2. Survolez un widget pour voir trois ic√¥nes. Utilisez l'ic√¥ne **Param√®tres** pour configurer les propri√©t√©s du widget.

   .. image:: img/09_blynk_dashboard_set.png
        :width: 600
        :align: center

3. Configurez le **widget Switch** pour le lier au flux de donn√©es **AwayMode(V0)**, en r√©glant les **ONLABEL** et **OFFLABEL** pour afficher **"away home"** et **"at home"**, respectivement.

   .. image:: img/09_web_dashboard_2_shadow.png
        :width: 600
        :align: center

4. Dans les param√®tres du **widget Label**, liez-le au flux de donn√©es **Current Status(V1)**.

   .. image:: img/09_web_dashboard_3_shadow.png
        :width: 600
        :align: center

**2.5 Configuration d'un √©v√©nement**

1. Cliquez sur **Events & Notifications** puis sur **Create Event**.

   .. image:: img/09_blynk_event_add.png
        :width: 600
        :align: center
    
2. Nommez l'√©v√©nement et sp√©cifiez son code. Choisissez **Warning** pour le **TYPE** et fournissez une br√®ve description pour l'email de notification. Ajustez la fr√©quence des notifications selon vos pr√©f√©rences.

   .. note::
   
      Assurez-vous que le **CODE DE L'√âV√âNEMENT** est d√©fini comme ``intrusion_detected``. Tout changement ici n√©cessite des ajustements correspondants dans le code.

   .. image:: img/09_event_1_shadow.png
        :width: 600
        :align: center

3. Allez dans la section **Notifications** pour activer les notifications et configurer les param√®tres d'email.

   .. image:: img/09_event_2_shadow.png
        :width: 600
        :align: center

4. Dans **Settings**, d√©finissez la fr√©quence de d√©clenchement des notifications et d√©finissez les intervalles selon vos pr√©f√©rences. N'oubliez pas de cliquer sur **Create** pour enregistrer vos param√®tres.

   .. image:: img/09_event_3_shadow.png
        :width: 600
        :align: center

**2.6 Enregistrement du template**

1. N'oubliez pas d'enregistrer vos modifications sur le template.

   .. image:: img/09_save_template_shadow.png
        :width: 600
        :align: center

**2.7 Cr√©ation d'un appareil**

1. Il est temps de cr√©er un nouvel appareil √† partir du template.

   .. image:: img/09_blynk_device_new.png
        :width: 600
        :align: center

2. S√©lectionnez **From template** pour commencer.

   .. image:: img/09_blynk_device_template.png
        :width: 600
        :align: center

3. Choisissez le template **Intrusion Alert System** et cliquez sur **Create**.

   .. image:: img/09_blynk_device_template2.png
        :width: 600
        :align: center

4. Notez l'**Template ID**, le **Device Name**, et l'**AuthToken** pour l'int√©gration avec votre ESP32.

   .. image:: img/09_blynk_device_code.png
        :width: 600
        :align: center

3. Ex√©cution du code
-----------------------------

#. Avant d'ex√©cuter le code, assurez-vous d'installer la biblioth√®que ``Blynk`` depuis le **Library Manager** sur l'Arduino IDE.

    .. image:: img/09_blynk_add_library.png
        :width: 700
        :align: center

#. Ouvrez le fichier ``iot_9_intrusion_alert_system.ino``, situ√© dans le r√©pertoire ``esp32-starter-kit-main\c\codes\iot_9_intrusion_alert_system``. Vous pouvez √©galement copier son contenu dans l'Arduino IDE.

    .. raw:: html

        <iframe src=https://create.arduino.cc/editor/sunfounder01/16bca228-64d7-4519-ac3b-833afecfcc65/preview?embed style="height:510px;width:100%;margin:10px 0" frameborder=0></iframe>


#. Remplacez les espaces r√©serv√©s pour ``BLYNK_TEMPLATE_ID``, ``BLYNK_TEMPLATE_NAME``, et ``BLYNK_AUTH_TOKEN`` par vos propres identifiants uniques.

    .. code-block:: arduino
    
        #define BLYNK_TEMPLATE_ID "TMPxxxxxxx"
        #define BLYNK_TEMPLATE_NAME "Intrusion Alert System"
        #define BLYNK_AUTH_TOKEN "xxxxxxxxxxxxx"

#. Vous devez √©galement entrer le ``ssid`` et le ``password`` de votre r√©seau WiFi.

   .. code-block:: arduino

        char ssid[] = "your_ssid";
        char pass[] = "your_password";

#. Choisissez la carte correcte (**ESP32 Dev Module**) et le port, puis cliquez sur le bouton **Upload**.

#. Ouvrez le moniteur s√©rie (r√©glez le d√©bit en bauds √† 115200) et attendez un message de connexion r√©ussie.

    .. image:: img/09_blynk_upload_code.png
        :align: center

#. Apr√®s une connexion r√©ussie, l'activation de l'interrupteur dans Blynk d√©marre la surveillance du module PIR. Lorsque le mouvement est d√©tect√© (√©tat de 1), il indiquera "Somebody here!" et enverra une alerte √† votre email.

    .. image:: img/09_blynk_code_alarm.png
        :width: 700
        :align: center

4. Explication du code
-----------------------------

#. **Configuration & Biblioth√®ques**

   Ici, vous configurez les constantes et les identifiants de Blynk. Vous incluez √©galement les biblioth√®ques n√©cessaires pour l'ESP32 et Blynk.

    .. code-block:: arduino

        /* Commentez ceci pour d√©sactiver les impressions et √©conomiser de l'espace */
        #define BLYNK_PRINT Serial

        #define BLYNK_TEMPLATE_ID "xxxxxxxxxxx"
        #define BLYNK_TEMPLATE_NAME "Intrusion Alert System"
        #define BLYNK_AUTH_TOKEN "xxxxxxxxxxxxxxxxxxxxxxxxxxx"

        #include <WiFi.h>
        #include <WiFiClient.h>
        #include <BlynkSimpleEsp32.h>

#. **Configuration WiFi**

   Entrez vos identifiants WiFi.

   .. code-block:: arduino

        char ssid[] = "your_ssid";
        char pass[] = "your_password";

#. **Configuration du capteur PIR**

   D√©finissez la broche o√π le capteur PIR est connect√© et initialisez les variables d'√©tat.

   .. code-block:: arduino

      const int sensorPin = 14;
      int state = 0;
      int awayHomeMode = 0;
      BlynkTimer timer;

#. **Fonction setup()**

   Cette fonction initialise le capteur PIR en tant qu'entr√©e, configure la communication s√©rie, se connecte au WiFi et configure Blynk.

   - Nous utilisons ``timer.setInterval(1000L, myTimerEvent)`` pour d√©finir l'intervalle du timer dans ``setup()``, ici nous r√©glons pour ex√©cuter la fonction ``myTimerEvent()`` toutes les **1000ms**. Vous pouvez modifier le premier param√®tre de ``timer.setInterval(1000L, myTimerEvent)`` pour changer l'intervalle entre les ex√©cutions de ``myTimerEvent``.

   .. raw:: html
    
    <br/> 

   .. code-block:: arduino

        void setup() {

            pinMode(sensorPin, INPUT);  // D√©finir la broche du capteur PIR comme entr√©e
            Serial.begin(115200);           // D√©marrer la communication s√©rie √† 115200 bauds pour le d√©bogage
            
            // Configurer Blynk et se connecter au WiFi
            Blynk.begin(BLYNK_AUTH_TOKEN, ssid, pass);
            
            timer.setInterval(1000L, myTimerEvent);  // Configurer une fonction √† appeler toutes les secondes
        }

#. **Fonction loop()**

   La fonction loop ex√©cute continuellement les fonctions Blynk et Blynk timer.

   .. code-block:: arduino

        void loop() {
           Blynk.run();
           timer.run();
        }

#. **Interaction avec l'application Blynk**

   Ces fonctions sont appel√©es lorsque l'appareil se connecte √† Blynk et lorsqu'il y a un changement d'√©tat de la broche virtuelle V0 sur l'application Blynk.

   - Chaque fois que l'appareil se connecte au serveur Blynk, ou se reconnecte en raison de mauvaises conditions r√©seau, la fonction ``BLYNK_CONNECTED()`` est appel√©e. La commande ``Blynk.syncVirtual()`` demande une valeur de broche virtuelle unique. La broche virtuelle sp√©cifi√©e ex√©cutera l'appel ``BLYNK_WRITE()``.

   - Chaque fois que la valeur d'une broche virtuelle sur le serveur Blynk change, elle d√©clenchera ``BLYNK_WRITE()``.

   .. raw:: html
    
    <br/> 

   .. code-block:: arduino
      
        // Cette fonction est appel√©e chaque fois que l'appareil est connect√© √† Blynk.Cloud
        BLYNK_CONNECTED() {
            Blynk.syncVirtual(V0);
        }
      
        // Cette fonction est appel√©e chaque fois que l'√©tat de la broche virtuelle 0 change
        BLYNK_WRITE(V0) {
            awayHomeMode = param.asInt();
            // logique suppl√©mentaire
        }

#. **Gestion des donn√©es**

   Chaque seconde, la fonction ``myTimerEvent()`` appelle ``sendData()``. Si le mode absence est activ√© sur Blynk, il v√©rifie le capteur PIR et envoie une notification √† Blynk si un mouvement est d√©tect√©.

   - Nous utilisons ``Blynk.virtualWrite(V1, "Somebody in your house! Please check!");`` pour changer le texte d'une √©tiquette.

   - Utilisez ``Blynk.logEvent("intrusion_detected");`` pour enregistrer l'√©v√©nement sur Blynk.

   .. raw:: html
    
    <br/> 

   .. code-block:: arduino

        void myTimerEvent() {
           sendData();
        }

        void sendData() {
           if (awayHomeMode == 1) {
              state = digitalRead(sensorPin);  // Lire l'√©tat du capteur PIR

              Serial.print("state:");
              Serial.println(state);

              // Si le capteur d√©tecte un mouvement, envoyer une alerte √† l'application Blynk
              if (state == HIGH) {
                Serial.println("Somebody here!");
                Blynk.virtualWrite(V1, "Somebody in your house! Please check!");
                Blynk.logEvent("intrusion_detected");
              }
           }
        }

**R√©f√©rences**

- |link_blynk_doc|
- |link_blynk_quickstart| 
- |link_blynk_virtualWrite|
- |link_blynk_logEvent|
- |link_blynk_timer_intro|
- |link_blynk_syncing| 
- |link_blynk_write|
