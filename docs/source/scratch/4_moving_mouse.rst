
    Bonjour, bienvenue dans la communaut√© des passionn√©s de SunFounder Raspberry Pi, Arduino et ESP32 sur Facebook ! Plongez plus profond√©ment dans Raspberry Pi, Arduino et ESP32 avec d'autres passionn√©s.

    **Pourquoi nous rejoindre ?**

    - **Support d'experts** : R√©solvez les probl√®mes post-vente et les d√©fis techniques avec l'aide de notre communaut√© et de notre √©quipe.
    - **Apprendre & Partager** : √âchangez des astuces et des tutoriels pour am√©liorer vos comp√©tences.
    - **Aper√ßus exclusifs** : Acc√©dez en avant-premi√®re aux annonces de nouveaux produits et aux aper√ßus.
    - **R√©ductions exclusives** : Profitez de r√©ductions exclusives sur nos nouveaux produits.
    - **Promotions et cadeaux festifs** : Participez √† des cadeaux et √† des promotions festives.

    üëâ Pr√™t √† explorer et cr√©er avec nous ? Cliquez sur [|link_sf_facebook|] et rejoignez-nous d√®s aujourd'hui !

.. _sh_moving_mouse:

2.4 Souris en Mouvement
===========================

Aujourd'hui, nous allons fabriquer un jouet de souris contr√¥l√© par un potentiom√®tre.

Lorsque le drapeau vert est cliqu√©, la souris sur la sc√®ne avance, et lorsque vous tournez le potentiom√®tre, la souris change de direction.

.. image:: img/6_mouse.png

Composants n√©cessaires
--------------------------

Pour ce projet, nous avons besoin des composants suivants. 

Il est certainement pratique d'acheter un kit complet, voici le lien : 

.. list-table::
    :widths: 20 20 20
    :header-rows: 1

    *   - Nom
        - ARTICLES DANS CE KIT
        - LIEN
    *   - Kit de d√©marrage ESP32
        - 320+
        - |link_esp32_starter_kit|

Vous pouvez √©galement les acheter s√©par√©ment via les liens ci-dessous.

.. list-table::
    :widths: 30 20
    :header-rows: 1

    *   - INTRODUCTION DES COMPOSANTS
        - LIEN D'ACHAT

    *   - :ref:`cpn_esp32_wroom_32e`
        - |link_esp32_wroom_32e_buy|
    *   - :ref:`cpn_esp32_camera_extension`
        - |link_esp32_extension_board|
    *   - :ref:`cpn_breadboard`
        - |link_breadboard_buy|
    *   - :ref:`cpn_wires`
        - |link_wires_buy|
    *   - :ref:`cpn_pot`
        - |link_potentiometer_buy|

Vous apprendrez
------------------

- Principe du potentiom√®tre
- Lire la broche analogique et les plages de valeurs
- Mapper une plage √† une autre
- D√©placer et changer la direction du sprite

Construire le circuit
-----------------------

Le potentiom√®tre est un √©l√©ment r√©sistif √† 3 bornes, les 2 broches lat√©rales sont connect√©es √† 5V et GND, et la broche centrale est connect√©e √† la broche 35. Apr√®s conversion par le convertisseur ADC de l'ESP32, la plage de valeurs est de 0 √† 4095.

.. image:: img/circuit/5_moving_mouse_bb.png

Programmation
-------------

**1. Choisir un sprite**

Supprimez le sprite par d√©faut, cliquez sur le bouton **Choisir un sprite** dans le coin inf√©rieur droit de la zone de sprites, entrez **mouse** dans la barre de recherche, puis cliquez pour l'ajouter.

.. image:: img/6_sprite.png

**2. Cr√©er une variable**

Cr√©ez une variable appel√©e **value** pour stocker la valeur lue par le potentiom√®tre.

Une fois cr√©√©e, vous verrez **value** appara√Ætre dans la palette **Variables** et en √©tat coch√©, ce qui signifie que cette variable appara√Ætra sur la sc√®ne.

.. image:: img/6_value.png

**3. Lire la valeur de la broche 35**

Stockez la valeur lue de la broche 35 dans la variable **value**.

* [set my variable to 0] : D√©finit la valeur de la variable.
* [read analog pin ()] : Lit la valeur des broches dans la plage de 0 √† 4095.

.. image:: img/6_read_a0.png

Pour pouvoir lire en continu, vous devez utiliser le bloc [forever]. Cliquez sur ce script pour le faire fonctionner, tournez le potentiom√®tre dans les deux sens, et vous verrez que la plage de valeurs est de 0 √† 1023.

.. image:: img/6_1023.png

**4. D√©placer le sprite**

Utilisez le bloc [move steps] pour d√©placer le sprite, ex√©cutez le script et vous verrez le sprite se d√©placer du milieu vers la droite.

.. image:: img/6_move.png

**5. Changer la direction du sprite**

Maintenant, changez la direction du mouvement du sprite en fonction de la valeur de la broche 35. √âtant donn√© que la valeur de la broche 35 varie de 0 √† 4095, mais que la direction de rotation du sprite est de -180 √† 180, un bloc [map] doit √™tre utilis√©.

Ajoutez √©galement [when green flag clicked] au d√©but pour d√©marrer le script.

* [`point in direction <https://en.scratch-wiki.info/wiki/Point_in_Direction_()_(block)>`_] : D√©finit l'angle de direction du sprite, de la palette **Mouvement**.
* [map from to] : Mappe une plage √† une autre.

.. image:: img/6_direction.png
