
    Bonjour, bienvenue dans la communaut√© des passionn√©s de SunFounder Raspberry Pi, Arduino et ESP32 sur Facebook ! Plongez plus profond√©ment dans Raspberry Pi, Arduino et ESP32 avec d'autres passionn√©s.

    **Pourquoi nous rejoindre ?**

    - **Support d'experts** : R√©solvez les probl√®mes post-vente et les d√©fis techniques avec l'aide de notre communaut√© et de notre √©quipe.
    - **Apprendre & Partager** : √âchangez des astuces et des tutoriels pour am√©liorer vos comp√©tences.
    - **Aper√ßus exclusifs** : Acc√©dez en avant-premi√®re aux annonces de nouveaux produits et aux aper√ßus.
    - **R√©ductions exclusives** : Profitez de r√©ductions exclusives sur nos nouveaux produits.
    - **Promotions et cadeaux festifs** : Participez √† des cadeaux et √† des promotions festives.

    üëâ Pr√™t √† explorer et cr√©er avec nous ? Cliquez sur [|link_sf_facebook|] et rejoignez-nous d√®s aujourd'hui !

.. _sh_doorbell:

2.5 Sonnette
======================

Ici, nous allons utiliser le bouton et la cloche sur la sc√®ne pour fabriquer une sonnette.

Apr√®s avoir cliqu√© sur le drapeau vert, vous pouvez appuyer sur le bouton et la cloche sur la sc√®ne √©mettra un son.

.. image:: img/7_doorbell.png

Composants n√©cessaires
-------------------------

Pour ce projet, nous avons besoin des composants suivants. 

Il est certainement pratique d'acheter un kit complet, voici le lien : 

.. list-table::
    :widths: 20 20 20
    :header-rows: 1

    *   - Nom
        - ARTICLES DANS CE KIT
        - LIEN
    *   - Kit de d√©marrage ESP32
        - 320+
        - |link_esp32_starter_kit|

Vous pouvez √©galement les acheter s√©par√©ment via les liens ci-dessous.

.. list-table::
    :widths: 30 20
    :header-rows: 1

    *   - INTRODUCTION DES COMPOSANTS
        - LIEN D'ACHAT

    *   - :ref:`cpn_esp32_wroom_32e`
        - |link_esp32_wroom_32e_buy|
    *   - :ref:`cpn_esp32_camera_extension`
        - |link_esp32_extension_board|
    *   - :ref:`cpn_breadboard`
        - |link_breadboard_buy|
    *   - :ref:`cpn_wires`
        - |link_wires_buy|
    *   - :ref:`cpn_resistor`
        - |link_resistor_buy|
    *   - :ref:`cpn_button`
        - |link_button_buy|

Vous apprendrez
-------------------

- Fonctionnement du bouton
- Lecture des broches num√©riques et plages de valeurs
- Cr√©ation d'une boucle conditionnelle
- Ajout d'un d√©cor
- Lecture d'un son

Construire le circuit
-----------------------

Le bouton est un dispositif √† 4 broches, puisque la broche 1 est connect√©e √† la broche 2, et la broche 3 √† la broche 4, lorsque le bouton est press√©, les 4 broches sont connect√©es, fermant ainsi le circuit.

.. image:: img/5_buttonc.png

Construisez le circuit selon le sch√©ma suivant.

* Connectez l'une des broches du c√¥t√© gauche du bouton √† la broche 14, qui est connect√©e √† une r√©sistance de tirage et √† un condensateur de 0,1uF (104) (pour √©liminer le jitter et obtenir un niveau stable lorsque le bouton fonctionne).
* Connectez l'autre extr√©mit√© de la r√©sistance et du condensateur √† la masse, et l'une des broches du c√¥t√© droit du bouton √† 5V.

.. image:: img/circuit/6_doorbel_bb.png

Programmation
-----------------

**1. Ajouter un d√©cor**

Cliquez sur le bouton **Choisir un d√©cor** dans le coin inf√©rieur droit.

.. image:: img/7_backdrop.png

Choisissez **Chambre 1**.

.. image:: img/7_bedroom2.png

**2. S√©lectionner le sprite**

Supprimez le sprite par d√©faut, cliquez sur le bouton **Choisir un sprite** dans le coin inf√©rieur droit de la zone des sprites, entrez **cloche** dans la barre de recherche, puis cliquez pour l'ajouter.

.. image:: img/7_sprite.png

Ensuite, s√©lectionnez le sprite **cloche** sur la sc√®ne et d√©placez-le √† la position souhait√©e.

.. image:: img/7_doorbell.png

**3. Appuyer sur le bouton et la cloche √©met un son**

Utilisez [si alors] pour cr√©er une instruction conditionnelle indiquant que lorsque la valeur de la broche 14 lue est √©gale √† 1 (le bouton est press√©), le son **xylo1** sera jou√©.

* [lire le statut de la broche num√©rique] : Ce bloc provient de la palette **ESP32** et est utilis√© pour lire la valeur d'une broche num√©rique, le r√©sultat est 0 ou 1.
* [`if then <https://en.scratch-wiki.info/wiki/If_()_Then_(block)>`_] : Ce bloc est un bloc de contr√¥le provenant de la palette **Contr√¥le**. Si sa condition bool√©enne est vraie, les blocs contenus √† l'int√©rieur s'ex√©cuteront, puis le script impliqu√© continuera. Si la condition est fausse, les scripts √† l'int√©rieur du bloc seront ignor√©s. La condition n'est v√©rifi√©e qu'une seule fois ; si la condition devient fausse pendant l'ex√©cution du script √† l'int√©rieur du bloc, celui-ci continuera √† s'ex√©cuter jusqu'√† ce qu'il soit termin√©.
* [jouer le son jusqu'√† la fin] : Ce bloc provient de la palette Son, utilis√© pour jouer des sons sp√©cifiques.

.. image:: img/7_bell.png
