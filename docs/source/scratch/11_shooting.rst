
    Bonjour et bienvenue dans la communaut√© des passionn√©s de SunFounder Raspberry Pi, Arduino et ESP32 sur Facebook ! Plongez plus profond√©ment dans Raspberry Pi, Arduino et ESP32 avec d'autres passionn√©s.

    **Pourquoi nous rejoindre ?**

    - **Support d'experts** : R√©solvez les probl√®mes apr√®s-vente et les d√©fis techniques avec l'aide de notre communaut√© et de notre √©quipe.
    - **Apprendre & Partager** : √âchangez des astuces et des tutoriels pour am√©liorer vos comp√©tences.
    - **Aper√ßus exclusifs** : Acc√©dez en avant-premi√®re aux annonces de nouveaux produits et aux avant-premi√®res.
    - **R√©ductions exclusives** : Profitez de r√©ductions exclusives sur nos nouveaux produits.
    - **Promotions festives et cadeaux** : Participez √† des cadeaux et √† des promotions festives.

    üëâ Pr√™t √† explorer et cr√©er avec nous ? Cliquez sur [|link_sf_facebook|] et rejoignez-nous d√®s aujourd'hui !

.. _sh_shooting:

2.11 JEU - Tir
=============================

Avez-vous d√©j√† vu ces jeux de tir √† la t√©l√©vision ? Plus un concurrent tire une balle pr√®s du centre de la cible, plus son score est √©lev√©.

Aujourd'hui, nous allons √©galement cr√©er un jeu de tir dans Scratch. Dans le jeu, laissez la lunette de vis√©e tirer le plus pr√®s possible du centre de la cible pour obtenir un score plus √©lev√©.

Cliquez sur le drapeau vert pour commencer. Utilisez le module d'√©vitement d'obstacles pour tirer une balle.

.. image:: img/14_shooting.png

Composants n√©cessaires
-----------------------

Pour ce projet, nous avons besoin des composants suivants.

Il est certainement pratique d'acheter un kit complet, voici le lien :

.. list-table::
    :widths: 20 20 20
    :header-rows: 1

    *   - Nom
        - ARTICLES DANS CE KIT
        - LIEN
    *   - Kit de d√©marrage ESP32
        - 320+
        - |link_esp32_starter_kit|

Vous pouvez √©galement les acheter s√©par√©ment via les liens ci-dessous.

.. list-table::
    :widths: 30 20
    :header-rows: 1

    *   - INTRODUCTION DES COMPOSANTS
        - LIEN D'ACHAT

    *   - :ref:`cpn_esp32_wroom_32e`
        - |link_esp32_wroom_32e_buy|
    *   - :ref:`cpn_esp32_camera_extension`
        - |link_esp32_extension_board|
    *   - :ref:`cpn_wires`
        - |link_wires_buy|
    *   - :ref:`cpn_avoid`
        - |link_avoid_buy|

Ce que vous apprendrez
-------------------------

- Comment fonctionne le module d'√©vitement d'obstacles et la plage d'angle
- Peindre diff√©rents sprites
- Toucher des couleurs

Construire le circuit
------------------------

Le module d'√©vitement d'obstacles est un capteur de proximit√© infrarouge ajustable en distance dont la sortie est normalement haute et basse lorsqu'un obstacle est d√©tect√©.

Construisez maintenant le circuit selon le sch√©ma ci-dessous.

.. image:: img/circuit/12_shooting_bb.png

Programmation
-----------------

**1. Peindre le sprite de la lunette de vis√©e**

Supprimez le sprite par d√©faut, s√©lectionnez le bouton **Sprite** et cliquez sur **Peindre**, un sprite vierge **Sprite1** appara√Ætra et nommez-le **Lunette de vis√©e**.

.. image:: img/14_shooting0.png

Allez √† la page **Costumes** du sprite **Lunette de vis√©e**. Cliquez sur l'outil **Cercle**, retirez la couleur de remplissage, et d√©finissez la couleur et la largeur du contour.

.. image:: img/14_shooting02.png

Dessinez maintenant un cercle avec l'outil **Cercle**. Apr√®s avoir dessin√©, vous pouvez cliquer sur l'outil **S√©lectionner** et d√©placer le cercle pour que le point d'origine soit align√© avec le centre de la toile.

.. image:: img/14_shooting03.png

En utilisant l'outil **Ligne**, dessinez une croix √† l'int√©rieur du cercle.

.. image:: img/14_shooting033.png

**Peindre le sprite de la cible**

Cr√©ez un nouveau sprite appel√© **Cible**.

.. image:: img/14_shooting01.png

Allez √† la page **Costumes** du sprite **Cible**, cliquez sur l'outil **Cercle**, s√©lectionnez une couleur de remplissage et retirez le contour, puis peignez un grand cercle.

.. image:: img/14_shooting05.png

Utilisez la m√™me m√©thode pour dessiner des cercles suppl√©mentaires, chacun avec une couleur diff√©rente, et vous pouvez utiliser l'outil **Avancer** ou **Reculer** pour changer la position des cercles superpos√©s. Notez que vous devez √©galement s√©lectionner l'outil pour d√©placer les cercles, de sorte que l'origine de tous les cercles et le centre de la toile soient align√©s.

.. image:: img/14_shooting04.png

**3. Ajouter un fond**

Ajoutez un fond appropri√©, de pr√©f√©rence sans trop de couleurs et qui ne correspond pas aux couleurs du sprite **Cible**. Ici, j'ai choisi le fond **Wall1**.

.. image:: img/14_shooting06.png

**4. Programmer le sprite de la lunette de vis√©e**

D√©finissez la position al√©atoire et la taille du sprite **Lunette de vis√©e**, et laissez-le se d√©placer de mani√®re al√©atoire.

.. image:: img/14_shooting4.png

Lorsqu'une main est plac√©e devant le module d'√©vitement d'obstacles, il √©mettra un niveau bas comme signal de transmission.

.. image:: img/14_shooting5.png

Lorsque le message **tir** est re√ßu, le sprite cesse de bouger et se r√©tr√©cit lentement, simulant ainsi l'effet d'une balle tir√©e.

.. image:: img/14_shooting6.png

Utilisez le bloc [Toucher la couleur ()] pour d√©terminer la position du tir.

.. image:: img/14_shooting7.png

Lorsque le tir est √† l'int√©rieur du cercle jaune, un score de 10 est rapport√©.

.. image:: img/14_shooting8.png

Utilisez la m√™me m√©thode pour d√©terminer la position du tir de la balle, si elle n'est pas r√©gl√©e sur le sprite **Cible**, cela signifie qu'elle est hors du cercle.

.. image:: img/14_shooting9.png
