.. note::

    Bonjour, bienvenue dans la communaut√© SunFounder Raspberry Pi & Arduino & ESP32 Enthusiasts sur Facebook ! Plongez dans l'univers de Raspberry Pi, Arduino et ESP32 avec d'autres passionn√©s.

    **Pourquoi nous rejoindre ?**

    - **Support d'experts** : R√©solvez les probl√®mes apr√®s-vente et les d√©fis techniques avec l'aide de notre communaut√© et de notre √©quipe.
    - **Apprendre et partager** : √âchangez des astuces et des tutoriels pour am√©liorer vos comp√©tences.
    - **Aper√ßus exclusifs** : Acc√©dez en avant-premi√®re aux annonces de nouveaux produits et aux avant-premi√®res.
    - **R√©ductions sp√©ciales** : Profitez de r√©ductions exclusives sur nos derniers produits.
    - **Promotions festives et cadeaux** : Participez √† des tirages au sort et √† des promotions festives.

    üëâ Pr√™t √† explorer et cr√©er avec nous ? Cliquez sur [|link_sf_facebook|] et rejoignez-nous d√®s aujourd'hui !

.. _sh_guide:

1.3 Guide rapide sur PictoBlox
====================================

Composants n√©cessaires
--------------------------

Pour ce projet, nous avons besoin des composants suivants. 

Il est certainement pratique d'acheter un kit complet, voici le lien : 

.. list-table::
    :widths: 20 20 20
    :header-rows: 1

    *   - Nom	
        - ARTICLES DANS CE KIT
        - LIEN
    *   - Kit de d√©marrage ESP32
        - 320+
        - |link_esp32_starter_kit|

Vous pouvez √©galement les acheter s√©par√©ment √† partir des liens ci-dessous.

.. list-table::
    :widths: 30 20
    :header-rows: 1

    *   - INTRODUCTION AUX COMPOSANTS
        - LIEN D'ACHAT

    *   - :ref:`cpn_esp32_wroom_32e`
        - |link_esp32_wroom_32e_buy|
    *   - :ref:`cpn_esp32_camera_extension`
        - |link_esp32_extension_board|
    *   - :ref:`cpn_breadboard`
        - |link_breadboard_buy|
    *   - :ref:`cpn_wires`
        - |link_wires_buy|
    *   - :ref:`cpn_resistor`
        - |link_resistor_buy|
    *   - :ref:`cpn_led`
        - |link_led_buy|

Apprenons maintenant √† utiliser PictoBlox en deux modes.

Construisons √©galement un circuit simple pour faire clignoter cette LED en 2 modes diff√©rents.

.. image:: ../img/circuit/1_hello_led_bb.png

.. _stage_mode:

Mode Sc√®ne
---------------

**1. Connectez la carte ESP32**

Connectez votre carte ESP32 √† l'ordinateur avec un c√¢ble USB, l'ordinateur reconna√Ætra g√©n√©ralement automatiquement votre carte et attribuera finalement un port COM.

    .. image:: ../../img/plugin_esp32.png
        :width: 600
        :align: center
    
Ouvrez PictoBlox, l'interface de programmation Python s'ouvrira par d√©faut. Nous devons passer √† l'interface Blocs.

.. image:: img/0_choose_blocks.png

Ensuite, vous verrez le coin sup√©rieur droit pour le changement de mode. Le mode par d√©faut est le mode Sc√®ne, o√π Tobi se tient sur la sc√®ne.

.. image:: img/1_stage_upload.png

Cliquez sur **Carte** dans la barre de navigation en haut √† droite pour s√©lectionner la carte.

.. image:: img/1_board.png

Par exemple, choisissez **ESP32**.

.. image:: img/1_choose_uno.png

Une fen√™tre de connexion appara√Ætra alors pour que vous s√©lectionniez le port √† connecter, et revenez √† la page d'accueil lorsque la connexion est termin√©e. Si vous perdez la connexion pendant l'utilisation, vous pouvez √©galement cliquer sur **Connecter** pour reconnecter.

.. image:: img/1_connect.png

En m√™me temps, des palettes li√©es √† l'ESP32, telles que ESP32, Actionneurs, etc., appara√Ætront dans la **Palette de Blocs**.

.. image:: img/1_arduino_uno.png

**2. T√©l√©chargez le firmware**

Comme nous allons travailler en mode Sc√®ne, nous devons t√©l√©charger le firmware sur la carte. Cela garantira une communication en temps r√©el entre la carte et l'ordinateur. Le t√©l√©chargement du firmware est un processus unique. Pour ce faire, cliquez sur le bouton T√©l√©charger Firmware.

Apr√®s un certain temps d'attente, le message de r√©ussite du t√©l√©chargement appara√Ætra.

.. note::

    Si vous utilisez cette carte dans PictoBlox pour la premi√®re fois, ou si cette carte a √©t√© pr√©c√©demment t√©l√©charg√©e avec l'IDE Arduino. Ensuite, vous devez appuyer sur **T√©l√©charger le Firmware** avant de pouvoir l'utiliser.


.. image:: img/1_firmware.png


**3. Programmation**

* Ouvrez et ex√©cutez directement le script

Bien s√ªr, vous pouvez ouvrir directement les scripts pour les ex√©cuter, mais veuillez d'abord les t√©l√©charger √† partir de `github <https://github.com/sunfounder/esp32-starter-kit/archive/refs/heads/main.zip>`_.

Vous pouvez cliquer sur **Fichier** dans le coin sup√©rieur droit, puis choisir **Ouvrir**.

.. image:: img/0_open.png

Choisissez **Ouvrir depuis l'ordinateur**.

.. image:: img/0_dic.png

Ensuite, allez dans le chemin ``esp32-starter-kit-main\scratch``, et ouvrez **1. Stage Mode.sb3**. Veuillez vous assurer que vous avez t√©l√©charg√© le code requis √† partir de `github <https://github.com/sunfounder/esp32-starter-kit/archive/refs/heads/main.zip>`_.

.. image:: img/0_stage.png

Cliquez directement sur le script pour l'ex√©cuter, certains projets sont √† cliquer sur le drapeau vert ou √† cliquer sur le sprite.

.. image:: img/1_more.png

* Programme √©tape par √©tape

Vous pouvez √©galement √©crire le script √©tape par √©tape en suivant ces √©tapes.

Cliquez sur la palette **ESP32**.

.. image:: img/1_arduino_uno.png

La LED est contr√¥l√©e par la broche num√©rique 26 (seulement 2 √©tats, HIGH ou LOW), alors faites glisser le bloc [d√©finir la broche num√©rique √†] vers la zone de script.

Puisque l'√©tat par d√©faut de la LED est allum√©, r√©glez maintenant la broche 23 sur LOW et cliquez sur ce bloc et vous verrez la LED s'√©teindre.

* [d√©finir la broche num√©rique √†] : R√©glez la broche num√©rique sur le niveau (HIGH/LOW).

.. image:: img/1_digital.png

Pour voir l'effet de clignotement continu de la LED, vous devez utiliser les blocs [Attendre 1 seconde] et [toujours] dans la palette **Contr√¥le**. Cliquez sur ces blocs apr√®s les avoir √©crits, il y a un halo jaune signifie qu'il est en cours d'ex√©cution.

* [Attendre 1 seconde] : de la palette **Contr√¥le**, utilis√© pour d√©finir l'intervalle de temps entre 2 blocs.
* [toujours] : de la palette **Contr√¥le**, permet au script de continuer √† s'ex√©cuter sauf si l'alimentation est coup√©e.

.. image:: img/1_more.png

.. _upload_mode:

Mode T√©l√©chargement
--------------------------

**1. Connectez la carte ESP32**

Connectez votre carte ESP32 √† l'ordinateur avec un c√¢ble USB, l'ordinateur reconna√Ætra g√©n√©ralement automatiquement votre carte et attribuera finalement un port COM.

    .. image:: ../../img/plugin_esp32.png
        :width: 600
        :align: center

Ouvrez PictoBlox et cliquez sur **Carte** dans la barre de navigation en haut √† droite pour s√©lectionner la carte.

.. image:: img/1_board.png

Par exemple, choisissez **ESP32**.

.. image:: img/1_choose_uno.png

Une fen√™tre de connexion appara√Ætra alors pour que vous s√©lectionniez le port √† connecter, et revenez √† la page d'accueil lorsque la connexion est termin√©e. Si vous perdez la connexion pendant l'utilisation, vous pouvez √©galement cliquer sur **Connecter** pour reconnecter.

.. image:: img/1_connect.png

En m√™me temps, des palettes li√©es √† l'ESP32, telles que ESP32, Actionneurs, etc., appara√Ætront dans la **Palette de Blocs**.

.. image:: img/1_upload_uno.png

Apr√®s avoir s√©lectionn√© le mode T√©l√©chargement, la sc√®ne passera √† la zone de code d'origine.

.. image:: img/1_upload.png

**2. Programmation**

* Ouvrez et ex√©cutez directement le script

Vous pouvez cliquer sur **Fichier** dans le coin sup√©rieur droit.

.. image:: img/0_open.png

Choisissez **Ouvrir depuis l'ordinateur**.

.. image:: img/0_dic.png

Ensuite, allez dans le chemin ``esp32-starter-kit-main\scratch``, et ouvrez **1. Upload Mode.sb3**. Veuillez vous assurer que vous avez t√©l√©charg√© le code requis √† partir de `github <https://github.com/sunfounder/esp32-starter-kit/archive/refs/heads/main.zip>`_.

.. image:: img/0_upload.png

Enfin, cliquez sur le bouton **T√©l√©charger le Code**.

.. image:: img/1_upload_code.png


* Programme √©tape par √©tape

Vous pouvez √©galement √©crire le script √©tape par √©tape en suivant ces √©tapes.

Cliquez sur la palette **ESP32**.

.. image:: img/1_upload_uno.png

Faites glisser [quand l'ESP32 d√©marre] vers la zone de script, qui est n√©cessaire pour chaque script.

.. image:: img/1_uno_starts.png

La LED est contr√¥l√©e par la broche num√©rique 26 (seulement 2 √©tats, HIGH ou LOW), alors faites glisser le bloc [d√©finir la broche num√©rique √†] vers la zone de script.

Puisque l'√©tat par d√©faut de la LED est allum√©, r√©glez maintenant la broche 26 sur LOW et cliquez sur ce bloc et vous verrez la LED s'√©teindre.

* [d√©finir la broche num√©rique √†] : R√©glez la broche num√©rique sur le niveau (HIGH/LOW).

.. image:: img/1_upload_digital.png

√Ä ce stade, vous verrez le code appara√Ætre sur le c√¥t√© droit, si vous souhaitez modifier ce code, vous pouvez alors activer le mode √âdition.

.. image:: img/1_upload1.png

Pour voir l'effet de clignotement continu de la LED, vous devez utiliser les blocs [Attendre 1 seconde] et [toujours] dans la palette **Contr√¥le**. Cliquez sur ces blocs apr√®s les avoir √©crits, il y a un halo jaune signifie qu'il est en cours d'ex√©cution.

* [Attendre 1 seconde] : de la palette **Contr√¥le**, utilis√© pour d√©finir l'intervalle de temps entre 2 blocs.
* [toujours] : de la palette **Contr√¥le**, permet au script de continuer √† s'ex√©cuter sauf si l'alimentation est coup√©e.

.. image:: img/1_upload_more.png

Enfin, cliquez sur le bouton **T√©l√©charger le Code**.

.. image:: img/1_upload_code.png
