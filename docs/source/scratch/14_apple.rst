
    Bonjour, bienvenue dans la communaut√© des passionn√©s SunFounder Raspberry Pi & Arduino & ESP32 sur Facebook ! Plongez plus profond√©ment dans l'univers du Raspberry Pi, Arduino et ESP32 avec d'autres passionn√©s.

    **Pourquoi nous rejoindre ?**

    - **Support d'experts** : R√©solvez les probl√®mes apr√®s-vente et les d√©fis techniques avec l'aide de notre communaut√© et de notre √©quipe.
    - **Apprendre & Partager** : √âchangez des astuces et des tutoriels pour am√©liorer vos comp√©tences.
    - **Aper√ßus exclusifs** : Acc√©dez en avant-premi√®re aux annonces de nouveaux produits et aux avant-premi√®res.
    - **R√©ductions exclusives** : Profitez de r√©ductions exclusives sur nos nouveaux produits.
    - **Promotions festives et cadeaux** : Participez √† des cadeaux et √† des promotions festives.

    üëâ Pr√™t √† explorer et cr√©er avec nous ? Cliquez sur [|link_sf_facebook|] et rejoignez-nous d√®s aujourd'hui !

.. _sh_eat_apple:

2.14 JEU - Manger la Pomme
==========================

Dans ce projet, nous jouons √† un jeu o√π nous utilisons un bouton pour contr√¥ler un scarab√©e afin qu'il mange une pomme.

Lorsque le drapeau vert est cliqu√©, appuyez sur le bouton et le scarab√©e tournera, appuyez √† nouveau sur le bouton et le scarab√©e s'arr√™tera et avancera dans cette direction. Vous devez contr√¥ler l'angle du scarab√©e afin qu'il avance sans toucher la ligne noire du labyrinthe jusqu'√† ce qu'il mange la pomme. S'il touche la ligne noire, le jeu est termin√©.

.. image:: img/14_apple.png

Composants n√©cessaires
--------------------------

Pour ce projet, nous avons besoin des composants suivants.

Il est certainement pratique d'acheter un kit complet, voici le lien :

.. list-table::
    :widths: 20 20 20
    :header-rows: 1

    *   - Nom	
        - ARTICLES DANS CE KIT
        - LIEN
    *   - Kit de d√©marrage ESP32
        - 320+
        - |link_esp32_starter_kit|

Vous pouvez √©galement les acheter s√©par√©ment via les liens ci-dessous.

.. list-table::
    :widths: 30 20
    :header-rows: 1

    *   - INTRODUCTION DES COMPOSANTS
        - LIEN D'ACHAT

    *   - :ref:`cpn_esp32_wroom_32e`
        - |link_esp32_wroom_32e_buy|
    *   - :ref:`cpn_esp32_camera_extension`
        - |link_esp32_extension_board|
    *   - :ref:`cpn_wires`
        - |link_wires_buy|
    *   - :ref:`cpn_breadboard`
        - |link_breadboard_buy|
    *   - :ref:`cpn_button`
        - |link_button_buy|

Construire le circuit
-------------------------

Le bouton est un dispositif √† 4 broches, car la broche 1 est connect√©e √† la broche 2, et la broche 3 √† la broche 4, lorsque le bouton est enfonc√©, les 4 broches sont connect√©es, fermant ainsi le circuit.

.. image:: img/5_buttonc.png

Construisez le circuit selon le sch√©ma suivant.

* Connectez l'une des broches du c√¥t√© gauche du bouton √† la broche 14, qui est reli√©e √† une r√©sistance de tirage et √† un condensateur de 0,1uF (104) (pour √©liminer les interf√©rences et obtenir un niveau stable lorsque le bouton fonctionne).
* Connectez l'autre extr√©mit√© de la r√©sistance et du condensateur √† la masse, et l'une des broches du c√¥t√© droit du bouton √† 5V.

.. image:: img/circuit/6_doorbel_bb.png

Programmation
-----------------
L'effet que nous voulons obtenir est d'utiliser le bouton pour contr√¥ler la direction du sprite **Beetle** afin qu'il avance et mange la pomme sans toucher la ligne noire sur l'arri√®re-plan **Maze**, qui changera l'arri√®re-plan lorsqu'elle est mang√©e.

Ajoutez maintenant les arri√®re-plans et les sprites pertinents.

**1. Ajouter des arri√®re-plans et des sprites**

Ajoutez un arri√®re-plan **Maze** via le bouton **Choisir un arri√®re-plan**.

.. image:: img/14_backdrop.png

Supprimez le sprite par d√©faut, puis s√©lectionnez le sprite **Beetle**.

.. image:: img/14_sprite.png

Placez le sprite **Beetle** √† l'entr√©e de l'arri√®re-plan **Maze**, en vous souvenant des valeurs des coordonn√©es x,y √† ce moment-l√†, et redimensionnez le sprite √† 40 %.

.. image:: img/14_sprite1.png

**2. Dessiner un arri√®re-plan**

Il est maintenant temps de dessiner simplement un arri√®re-plan avec le personnage WIN! qui y appara√Æt.

Cliquez d'abord sur la vignette de l'arri√®re-plan pour acc√©der √† la page **Arri√®re-plans** et cliquez sur l'arri√®re-plan vierge 1.

.. image:: img/14_paint_back.png
    :width: 800

Commencez maintenant √† dessiner, vous pouvez vous r√©f√©rer √† l'image ci-dessous pour dessiner, ou vous pouvez dessiner un arri√®re-plan vous-m√™me, tant que l'expression est gagnante.

* En utilisant l'outil **Cercle**, dessinez une ellipse avec la couleur d√©finie sur le rouge et sans contour.
* Ensuite, utilisez l'outil **Texte**, √©crivez le caract√®re "WIN!", d√©finissez la couleur du caract√®re en noir et ajustez la taille et la position du caract√®re.
* Nommez l'arri√®re-plan **Win**.

.. image:: img/14_win.png

**3. Script pour l'arri√®re-plan**

L'arri√®re-plan doit √™tre chang√© en **Maze** √† chaque d√©but de jeu.

.. image:: img/14_switchback.png

**4. √âcrire des scripts pour le sprite Beetle**

√âcrivez maintenant un script pour le sprite **Beetle** afin qu'il puisse avancer et changer de direction sous le contr√¥le d'un bouton. Le flux de travail est le suivant.

* Lorsque le drapeau vert est cliqu√©, d√©finissez l'angle du **Beetle** √† 90, et la position √† (-134, -134), ou remplacez-la par la valeur des coordonn√©es de votre propre position. Cr√©ez la variable **flag** et d√©finissez la valeur initiale √† -1.

.. image:: img/14_bee1.png

Ensuite, dans le bloc [forever], quatre blocs [if] sont utilis√©s pour d√©terminer divers sc√©narios possibles.

* Si le bouton est 1 (enfonc√©), utilisez le bloc [`mod <https://en.scratch-wiki.info/wiki/Boolean_Block>`_] pour basculer la valeur de la variable **flag** entre 0 et 1 (alternant entre 0 pour cette pression et 1 pour la prochaine pression).

.. image:: img/14_bee2.png

* Si flag=0 (cette pression de bouton), laissez le sprite **Beetle** tourner dans le sens horaire. Ensuite, d√©terminez si flag est √©gal √† 1 (bouton press√© √† nouveau), le sprite **Beetle** avance. Sinon, il continue de tourner dans le sens horaire.

.. image:: img/14_bee3.png

* Si le sprite Beetle touche le noir (la ligne noire sur l'arri√®re-plan **Maze**), le jeu se termine et le script cesse de fonctionner.

.. note::
    
    Vous devez cliquer sur la zone de couleur dans le bloc [Toucher la couleur], puis s√©lectionner l'outil pipette pour choisir la couleur de la ligne noire sur la sc√®ne. Si vous choisissez un noir de mani√®re arbitraire, ce bloc [Toucher la couleur] ne fonctionnera pas.

.. image:: img/14_bee5.png

* Si le scarab√©e touche le rouge (utilisez √©galement l'outil pipette pour choisir la couleur rouge de la pomme), l'arri√®re-plan sera chang√© en **Win**, ce qui signifie que le jeu r√©ussit et arr√™te le script de fonctionner.

.. image:: img/14_bee4.png
