.. note::

    Hallo und willkommen in der SunFounder Raspberry Pi & Arduino & ESP32 Enthusiasten-Gemeinschaft auf Facebook! Tauchen Sie tiefer ein in die Welt von Raspberry Pi, Arduino und ESP32 mit anderen Enthusiasten.

    **Warum beitreten?**

    - **Expertenunterst√ºtzung**: L√∂sen Sie Nachverkaufsprobleme und technische Herausforderungen mit Hilfe unserer Gemeinschaft und unseres Teams.
    - **Lernen & Teilen**: Tauschen Sie Tipps und Anleitungen aus, um Ihre F√§higkeiten zu verbessern.
    - **Exklusive Vorschauen**: Erhalten Sie fr√ºhzeitigen Zugang zu neuen Produktank√ºndigungen und exklusiven Einblicken.
    - **Spezialrabatte**: Genie√üen Sie exklusive Rabatte auf unsere neuesten Produkte.
    - **Festliche Aktionen und Gewinnspiele**: Nehmen Sie an Gewinnspielen und Feiertagsaktionen teil.

    üëâ Sind Sie bereit, mit uns zu erkunden und zu erschaffen? Klicken Sie auf [|link_sf_facebook|] und treten Sie heute bei!

.. _sh_eat_apple:

2.14 SPIEL - Apfel Essen
==============================

In diesem Projekt spielen wir ein Spiel, bei dem wir einen Knopf verwenden, um den K√§fer zu steuern, damit er √Ñpfel isst.

Wenn die gr√ºne Flagge angeklickt wird, dr√ºcke den Knopf und der K√§fer wird sich drehen. Dr√ºcke den Knopf erneut und der K√§fer h√§lt an und bewegt sich in diesem Winkel vorw√§rts. Du musst den Winkel des K√§fers so steuern, dass er sich vorw√§rts bewegt, ohne die schwarze Linie auf der Karte zu ber√ºhren, bis er den Apfel isst. Wenn er die schwarze Linie ber√ºhrt, ist das Spiel vorbei.

.. image:: img/14_apple.png

Ben√∂tigte Komponenten
-----------------------

F√ºr dieses Projekt ben√∂tigen wir die folgenden Komponenten.

Es ist definitiv praktisch, ein ganzes Set zu kaufen. Hier ist der Link:

.. list-table::
    :widths: 20 20 20
    :header-rows: 1

    *   - Name	
        - ARTIKEL IN DIESEM KIT
        - LINK
    *   - ESP32 Starter Kit
        - 320+
        - |link_esp32_starter_kit|

Sie k√∂nnen sie auch separat √ºber die untenstehenden Links kaufen.

.. list-table::
    :widths: 30 20
    :header-rows: 1

    *   - KOMPONENTENBESCHREIBUNG
        - KAUF-LINK

    *   - :ref:`cpn_esp32_wroom_32e`
        - |link_esp32_wroom_32e_buy|
    *   - :ref:`cpn_esp32_camera_extension`
        - |link_esp32_extension_board|
    *   - :ref:`cpn_breadboard`
        - |link_breadboard_buy|
    *   - :ref:`cpn_wires`
        - |link_wires_buy|
    *   - :ref:`cpn_resistor`
        - |link_resistor_buy|
    *   - :ref:`cpn_button`
        - |link_button_buy|

Schaltung Aufbauen
-----------------------

Der Knopf ist ein 4-poliges Ger√§t, da Pin 1 mit Pin 2 verbunden ist und Pin 3 mit Pin 4, wenn der Knopf gedr√ºckt wird, sind die 4 Pins verbunden, wodurch der Stromkreis geschlossen wird.

.. image:: img/5_buttonc.png

Bauen Sie die Schaltung gem√§√ü dem folgenden Diagramm auf.

* Verbinden Sie einen der Pins auf der linken Seite des Knopfes mit Pin14, der mit einem Pull-Down-Widerstand und einem 0,1uF (104) Kondensator verbunden ist (um Schwankungen zu eliminieren und ein stabiles Level auszugeben, wenn der Knopf bet√§tigt wird).
* Verbinden Sie das andere Ende des Widerstands und des Kondensators mit GND, und einen der Pins auf der rechten Seite des Knopfes mit 5V.

.. image:: img/circuit/6_doorbel_bb.png

Programmierung
------------------
Das Ziel ist es, den Knopf zu verwenden, um die Richtung des **Beetle**-Sprites zu steuern, damit es vorw√§rts geht und den Apfel isst, ohne die schwarze Linie auf dem **Maze**-Hintergrund zu ber√ºhren. Wenn der Apfel gegessen wird, wird der Hintergrund gewechselt.

F√ºge nun die relevanten Hintergr√ºnde und Sprites hinzu.

**1. Hintergr√ºnde und Sprites hinzuf√ºgen**

F√ºge einen **Maze**-Hintergrund √ºber den Button **Choose a backdrop** hinzu.

.. image:: img/14_backdrop.png

L√∂sche das Standard-Sprite und w√§hle dann das **Beetle**-Sprite aus.

.. image:: img/14_sprite.png

Platziere das **Beetle**-Sprite am Eingang des **Maze**-Hintergrunds, merke dir die x,y-Koordinatenwerte an diesem Punkt und √§ndere die Gr√∂√üe des Sprites auf 40%.

.. image:: img/14_sprite1.png

**2. Einen Hintergrund zeichnen**

Jetzt ist es an der Zeit, einen einfachen Hintergrund mit dem WIN!-Zeichen darauf zu zeichnen.

Klicke zuerst auf die Miniaturansicht des Hintergrunds, um zur **Backdrops**-Seite zu gelangen und klicke auf den leeren Hintergrund1.

.. image:: img/14_paint_back.png
    :width: 800

Beginne jetzt mit dem Zeichnen, du kannst das Bild unten als Referenz verwenden oder deinen eigenen Hintergrund zeichnen, solange der Ausdruck gewinnend ist.

* Verwende das **Circle**-Werkzeug, um eine Ellipse mit der Farbe Rot und ohne Umrandung zu zeichnen.
* Dann verwende das **Text**-Werkzeug, schreibe das Zeichen \"WIN!\", setze die Zeichenfarbe auf Schwarz und passe die Gr√∂√üe und Position des Zeichens an.
* Benenne den Hintergrund als **Win**.

.. image:: img/14_win.png

**3. Skript f√ºr den Hintergrund**

Der Hintergrund muss jedes Mal, wenn das Spiel beginnt, auf **Maze** umgeschaltet werden.

.. image:: img/14_switchback.png

**4. Skripte f√ºr das Sprite K√§fer schreiben**

Schreibe jetzt ein Skript f√ºr das Sprite **Beetle**, um vorw√§rtsbewegen und die Richtung unter Kontrolle eines Knopfes √§ndern zu k√∂nnen. Der Arbeitsablauf ist wie folgt.

* Wenn die gr√ºne Flagge angeklickt wird, setze den Winkel des **Beetle** auf 90 und die Position auf (-134, -134) oder ersetze sie durch den Koordinatenwert deiner eigenen Platzierung. Erstelle die Variable **flag** und setze den Anfangswert auf -1.

.. image:: img/14_bee1.png

Als N√§chstes werden im [forever]-Block vier [if]-Bl√∂cke verwendet, um verschiedene m√∂gliche Szenarien zu bestimmen.

* Wenn der Knopf 1 ist (gedr√ºckt), verwende den [`mod <https://en.scratch-wiki.info/wiki/Boolean_Block>`_]-Block, um den Wert der Variable **flag** zwischen 0 und 1 umzuschalten (abwechselnd zwischen 0 f√ºr diesen Druck und 1 f√ºr den n√§chsten Druck).

.. image:: img/14_bee2.png

* Wenn Flag=0 (dieser Knopfdruck), lasse das **Beetle**-Sprite sich im Uhrzeigersinn drehen. Dann bestimme, ob Flag gleich 1 ist (Knopf erneut gedr√ºckt), das **Beetle**-Sprite bewegt sich vorw√§rts. Andernfalls dreht es sich weiter im Uhrzeigersinn.

.. image:: img/14_bee3.png

* Wenn das K√§fer-Sprite Schwarz ber√ºhrt (die schwarze Linie auf dem **Maze**-Hintergrund), endet das Spiel und das Skript stoppt.

.. note::
    
    Du musst auf den Farbbereich im [Touch color]-Block klicken und dann das Pipettenwerkzeug verwenden, um die Farbe der schwarzen Linie auf der B√ºhne aufzunehmen. Wenn du willk√ºrlich ein Schwarz w√§hlst, funktioniert dieser [Touch color]-Block nicht.


.. image:: img/14_bee5.png

* Wenn K√§fer Rot ber√ºhrt (Verwende auch das Strohwerkzeug, um die rote Farbe des Apfels aufzunehmen), wird der Hintergrund auf **Win** umgeschaltet, was bedeutet, dass das Spiel erfolgreich ist und das Skript stoppt.


.. image:: img/14_bee4.png

