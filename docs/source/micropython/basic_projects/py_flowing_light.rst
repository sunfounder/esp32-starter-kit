.. note::

    Bonjour, bienvenue dans la communaut√© Facebook des passionn√©s de SunFounder Raspberry Pi & Arduino & ESP32 ! Plongez plus profond√©ment dans l'univers des Raspberry Pi, Arduino et ESP32 avec d'autres passionn√©s.

    **Pourquoi nous rejoindre ?**

    - **Support d'experts** : R√©solvez les probl√®mes apr√®s-vente et les d√©fis techniques avec l'aide de notre communaut√© et de notre √©quipe.
    - **Apprenez et partagez** : √âchangez des astuces et des tutoriels pour am√©liorer vos comp√©tences.
    - **Aper√ßus exclusifs** : Acc√©dez en avant-premi√®re aux annonces de nouveaux produits et aux avant-go√ªts.
    - **R√©ductions sp√©ciales** : Profitez de r√©ductions exclusives sur nos derniers produits.
    - **Promotions festives et cadeaux** : Participez √† des tirages au sort et √† des promotions sp√©ciales pour les f√™tes.

    üëâ Pr√™t √† explorer et √† cr√©er avec nous ? Cliquez sur [|link_sf_facebook|] et rejoignez-nous d√®s aujourd'hui !

.. _py_flowing_light:

6.2 Lumi√®re D√©filante
=================================

Avez-vous d√©j√† voulu ajouter un √©l√©ment amusant et interactif √† votre espace de vie ? 
Ce projet consiste √† cr√©er une lumi√®re d√©filante en utilisant une bande LED WS2812 et un module d'√©vitement d'obstacles. 
La lumi√®re d√©filante change de direction lorsqu'un obstacle est d√©tect√©, ce qui en fait un ajout excitant √† votre d√©coration int√©rieure ou de bureau.

**Composants n√©cessaires**

Dans ce projet, nous aurons besoin des composants suivants. 

Il est d√©finitivement pratique d'acheter un kit complet, voici le lien : 

.. list-table::
    :widths: 20 20 20
    :header-rows: 1

    *   - Nom	
        - ARTICLES DANS CE KIT
        - LIEN
    *   - Kit de d√©marrage ESP32
        - 320+
        - |link_esp32_starter_kit|

Vous pouvez √©galement les acheter s√©par√©ment via les liens ci-dessous.

.. list-table::
    :widths: 30 20
    :header-rows: 1

    *   - INTRODUCTION DES COMPOSANTS
        - LIEN D'ACHAT

    *   - :ref:`cpn_esp32_wroom_32e`
        - |link_esp32_wroom_32e_buy|
    *   - :ref:`cpn_esp32_camera_extension`
        - |link_esp32_extension_board|
    *   - :ref:`cpn_wires`
        - |link_wires_buy|
    *   - :ref:`cpn_avoid`
        - |link_avoid_buy|
    *   - :ref:`cpn_ws2812`
        - |link_ws2812_buy|

**Sch√©ma**

.. image:: ../../img/circuit/circuit_6.2_flowing_led.png
    :align: center

La bande LED WS2812 est compos√©e d'une s√©rie de LEDs individuelles qui peuvent √™tre programm√©es pour afficher diff√©rentes couleurs et motifs. 
Dans ce projet, la bande est configur√©e pour afficher une lumi√®re d√©filante qui se d√©place dans une direction particuli√®re et 
change de direction lorsqu'un obstacle est d√©tect√© par le module d'√©vitement d'obstacles.

**C√¢blage**

.. image:: ../../img/wiring/6.2_flowing_light_bb.png
    :width: 800

**Code**

.. note::

    * Ouvrez le fichier ``6.2_flowing_led.py`` situ√© dans le chemin ``esp32-starter-kit-main\micropython\codes``, ou copiez et collez le code dans Thonny. Ensuite, cliquez sur "Ex√©cuter le script actuel" ou appuyez sur F5 pour l'ex√©cuter.
    * Assurez-vous de s√©lectionner l'interpr√©teur "MicroPython (ESP32).COMxx" dans le coin inf√©rieur droit. 

    
.. code-block:: python

      from machine import Pin
      import neopixel
      import time
      import random

      # D√©finir le nombre de pixels pour la lumi√®re d√©filante
      num_pixels = 8

      # D√©finir la broche de donn√©es pour la bande LED RGB
      data_pin = Pin(14, Pin.OUT)

      # Initialiser l'objet bande LED RGB
      pixels = neopixel.NeoPixel(data_pin, num_pixels)

      # Initialiser le capteur d'√©vitement
      avoid = Pin(25, Pin.IN)

      # Initialiser la variable de direction
      direction_forward = True

      # Initialiser le drapeau de direction inverse
      reverse_direction = False

      # Boucle continue de la lumi√®re d√©filante
      while True:
      
      # Lire l'entr√©e du capteur infrarouge
      avoid_value = avoid.value()
      
      # G√©n√©rer une couleur al√©atoire pour le pixel actuel
      color = (random.randint(0, 255), random.randint(0, 255), random.randint(0, 255))
                  
      # Si aucun obstacle n'est d√©tect√©
      if avoid_value:
            for i in range(num_pixels):
                  
                  # Allumer le pixel actuel avec la couleur al√©atoire
                  pixels[i] = color
                  
                  # Mettre √† jour l'affichage de la bande LED RGB
                  pixels.write()
                  
                  # √âteindre le pixel actuel
                  pixels[i] = (0, 0, 0)
                  time.sleep_ms(100)
                  
      # Si un obstacle est d√©tect√©, changer la direction de la bande LED
      else:
            for i in range(num_pixels-1, -1, -1):
                  
                  pixels[i] = color
                  pixels.write()
                  pixels[i] = (0, 0, 0)
                  time.sleep_ms(100)

Les LEDs de la bande RGB s'allument une par une lorsque le script s'ex√©cute. D√®s qu'un objet est plac√© devant le module d'√©vitement d'obstacles, les LEDs de la bande RGB s'allument une par une dans la direction oppos√©e.
