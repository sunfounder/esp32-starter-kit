.. note::

    Bonjour et bienvenue dans la communaut√© des passionn√©s de SunFounder Raspberry Pi, Arduino et ESP32 sur Facebook ! Plongez au c≈ìur des Raspberry Pi, Arduino et ESP32 avec d'autres passionn√©s.

    **Pourquoi nous rejoindre ?**

    - **Support d'experts** : R√©solvez les probl√®mes apr√®s-vente et les d√©fis techniques avec l'aide de notre communaut√© et de notre √©quipe.
    - **Apprendre et partager** : √âchangez des astuces et des tutoriels pour am√©liorer vos comp√©tences.
    - **Aper√ßus exclusifs** : Acc√©dez en avant-premi√®re aux annonces de nouveaux produits et aux avant-premi√®res.
    - **R√©ductions sp√©ciales** : Profitez de r√©ductions exclusives sur nos derniers produits.
    - **Promotions festives et cadeaux** : Participez √† des tirages au sort et √† des promotions festives.

    üëâ Pr√™t √† explorer et √† cr√©er avec nous ? Cliquez sur [|link_sf_facebook|] et rejoignez-nous d√®s aujourd'hui !

.. _py_reversing_aid:

6.4 Assistance au Recul
===============================

Imaginez ceci : Vous √™tes dans votre voiture, pr√™t √† reculer dans une place de parking √©troite. Avec notre projet, vous aurez un module ultrasonique mont√© √† l'arri√®re de votre v√©hicule, agissant comme un ≈ìil num√©rique. Lorsque vous engagez la marche arri√®re, le module s'active, √©mettant des impulsions ultrasoniques qui rebondissent sur les obstacles derri√®re vous.

La magie op√®re lorsque ces impulsions reviennent au module. Il calcule rapidement la distance entre votre voiture et les objets, transformant ces donn√©es en retour visuel en temps r√©el affich√© sur un √©cran LCD vibrant. Vous verrez des indicateurs dynamiques et color√©s repr√©sentant la proximit√© des obstacles, vous offrant une compr√©hension claire de l'environnement qui vous entoure.

Mais nous ne nous sommes pas arr√™t√©s l√†. Pour vous immerger davantage dans cette exp√©rience de conduite, nous avons incorpor√© un buzzer. √Ä mesure que votre voiture s'approche d'un obstacle, le tempo du buzzer s'intensifie, cr√©ant une symphonie d'avertissements auditifs. C'est comme avoir un orchestre personnel vous guidant √† travers les complexit√©s du stationnement en marche arri√®re.

Ce projet innovant combine une technologie de pointe avec une interface utilisateur interactive, rendant votre exp√©rience de recul s√©curis√©e et sans stress. Avec le module ultrasonique, l'√©cran LCD et le buzzer travaillant harmonieusement, vous vous sentirez puissant et confiant en man≈ìuvrant dans des espaces restreints, vous permettant de vous concentrer sur le plaisir de conduire.

**Composants n√©cessaires**

Dans ce projet, nous aurons besoin des composants suivants. 

Il est d√©finitivement pratique d'acheter un kit complet, voici le lien :

.. list-table::
    :widths: 20 20 20
    :header-rows: 1

    *   - Nom	
        - ARTICLES DANS CE KIT
        - LIEN
    *   - Kit de d√©marrage ESP32
        - 320+
        - |link_esp32_starter_kit|

Vous pouvez √©galement les acheter s√©par√©ment via les liens ci-dessous.

.. list-table::
    :widths: 30 20
    :header-rows: 1

    *   - INTRODUCTION DES COMPOSANTS
        - LIEN D'ACHAT

    *   - :ref:`cpn_esp32_wroom_32e`
        - |link_esp32_wroom_32e_buy|
    *   - :ref:`cpn_esp32_camera_extension`
        - |link_esp32_extension_board|
    *   - :ref:`cpn_breadboard`
        - |link_breadboard_buy|
    *   - :ref:`cpn_wires`
        - |link_wires_buy|
    *   - :ref:`cpn_resistor`
        - |link_resistor_buy|
    *   - :ref:`cpn_ultrasonic`
        - |link_ultrasonic_buy|
    *   - :ref:`cpn_buzzer`
        - \-
    *   - :ref:`cpn_transistor`
        - |link_transistor_buy|
    *   - :ref:`cpn_lcd`
        - |link_i2clcd1602_buy|

**Sch√©ma**

.. image:: ../../img/circuit/circuit_6.4_reversing_aid.png
    :width: 800
    :align: center


Le capteur ultrasonique du projet √©met des ondes sonores haute fr√©quence et mesure le temps que mettent les ondes pour rebondir apr√®s avoir heurt√© un objet. En analysant ces donn√©es, la distance entre le capteur et l'objet peut √™tre calcul√©e. Pour avertir lorsque l'objet est trop proche, un buzzer est utilis√© pour produire un signal sonore. De plus, la distance mesur√©e est affich√©e sur un √©cran LCD pour une visualisation facile.

**C√¢blage**

.. image:: ../../img/wiring/6.4_aid_ultrasonic_bb.png
    :width: 800
    :align: center

**Code**

.. note::

    * Ouvrez le fichier ``6.4_reversing_aid.py`` situ√© dans le chemin ``esp32-starter-kit-main\micropython\codes``, ou copiez et collez le code dans Thonny. Puis cliquez sur "Run Current Script" ou appuyez sur F5 pour l'ex√©cuter.
    * Assurez-vous de s√©lectionner l'interpr√©teur "MicroPython (ESP32).COMxx" dans le coin inf√©rieur droit. 

.. code-block:: python

    # Importer les biblioth√®ques n√©cessaires
    from machine import Pin
    import time
    from lcd1602 import LCD
    import _thread

    # Initialiser le buzzer
    buzzer = Pin(14, Pin.OUT)

    # Initialiser le module ultrasonique
    TRIG = Pin(26, Pin.OUT)
    ECHO = Pin(25, Pin.IN)

    # Initialiser l'√©cran LCD1602
    lcd = LCD()

    dis = 100

    # Calculer la distance
    def distance():
        # S'assurer que le d√©clencheur est initialement d√©sactiv√©
        TRIG.off()
        time.sleep_us(2)  # Attendre 2 microsecondes

        # Envoyer une impulsion de 10 microsecondes √† la broche de d√©clenchement
        TRIG.on()
        time.sleep_us(10)
        TRIG.off()

        # Attendre que la broche d'√©cho devienne haute
        while not ECHO.value():
            pass

        # Enregistrer l'heure o√π la broche d'√©cho devient haute
        time1 = time.ticks_us()

        # Attendre que la broche d'√©cho devienne basse
        while ECHO.value():
            pass

        # Enregistrer l'heure o√π la broche d'√©cho devient basse
        time2 = time.ticks_us()

        # Calculer la diff√©rence de temps entre les deux temps enregistr√©s
        during = time.ticks_diff(time2, time1)

        # Calculer et retourner la distance (en cm) en utilisant la vitesse du son (340 m/s)
        return during * 340 / 2 / 10000

    # Thread pour mettre √† jour continuellement la lecture du capteur ultrasonique
    def ultrasonic_thread():
        global dis
        while True:
            dis = distance()
            
            # Effacer l'√©cran LCD
            lcd.clear()
            
            # Afficher la distance
            lcd.write(0, 0, 'Dis: %.2f cm' % dis)
            time.sleep(0.5)

    # D√©marrer le thread de lecture du capteur ultrasonique
    _thread.start_new_thread(ultrasonic_thread, ())

    # Fonction de bip pour le buzzer
    def beep():
        buzzer.value(1)
        time.sleep(0.1)
        buzzer.value(0)
        time.sleep(0.1)

    # Initialiser la variable d'intervalles
    intervals = 10000000
    previousMills = time.ticks_ms()
    time.sleep(1)

    # Boucle principale
    while True:
        # Mettre √† jour les intervalles en fonction de la distance
        if dis < 0 and dis > 500:
            pass
        elif dis <= 10:
            intervals = 300
        elif dis <= 20:
            intervals = 500
        elif dis <= 50:
            intervals = 1000
        else:
            intervals = 2000

        # Imprimer la distance si elle n'est pas -1
        if dis != -1:
            print('Distance: %.2f' % dis)
        time.sleep_ms(100)

        # V√©rifier s'il est temps de biper
        currentMills = time.ticks_ms()
        if time.ticks_diff(currentMills, previousMills) >= intervals:
            beep()
            previousMills = currentMills


* Lorsque le script est en cours d'ex√©cution, le module ultrasonique d√©tecte continuellement la distance des obstacles devant lui et affiche la distance sur la console et l'√©cran I2C LCD1602. 
* √Ä mesure que l'obstacle se rapproche, la fr√©quence des bips du buzzer augmente.
* La fonction ``ultrasonic_thread()`` s'ex√©cute dans un thread s√©par√© pour permettre une mise √† jour continue de la mesure de distance sans bloquer la boucle principale.

.. note:: 

    Si le code et le c√¢blage sont corrects, mais que l'√©cran LCD ne parvient toujours pas √† afficher du contenu, vous pouvez ajuster le potentiom√®tre √† l'arri√®re pour augmenter le contraste.

