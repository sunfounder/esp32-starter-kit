.. note::

    Bonjour, bienvenue dans la communaut√© Facebook des passionn√©s de SunFounder Raspberry Pi & Arduino & ESP32 ! Plongez plus profond√©ment dans l'univers des Raspberry Pi, Arduino et ESP32 avec d'autres passionn√©s.

    **Pourquoi nous rejoindre ?**

    - **Support d'experts** : R√©solvez les probl√®mes apr√®s-vente et les d√©fis techniques avec l'aide de notre communaut√© et de notre √©quipe.
    - **Apprenez et partagez** : √âchangez des astuces et des tutoriels pour am√©liorer vos comp√©tences.
    - **Aper√ßus exclusifs** : Acc√©dez en avant-premi√®re aux annonces de nouveaux produits et aux avant-go√ªts.
    - **R√©ductions sp√©ciales** : Profitez de r√©ductions exclusives sur nos derniers produits.
    - **Promotions festives et cadeaux** : Participez √† des tirages au sort et √† des promotions sp√©ciales pour les f√™tes.

    üëâ Pr√™t √† explorer et √† cr√©er avec nous ? Cliquez sur [|link_sf_facebook|] et rejoignez-nous d√®s aujourd'hui !

.. _py_ir_obstacle:

5.3 D√©tection d'Obstacle
===================================

Ce module est couramment install√© sur les voitures et les robots pour d√©tecter 
la pr√©sence d'obstacles devant eux. Il est √©galement largement utilis√© dans les 
appareils portatifs, les robinets d'eau, etc.

**Composants n√©cessaires**

Dans ce projet, nous aurons besoin des composants suivants. 

Il est d√©finitivement pratique d'acheter un kit complet, voici le lien : 

.. list-table::
    :widths: 20 20 20
    :header-rows: 1

    *   - Nom	
        - ARTICLES DANS CE KIT
        - LIEN
    *   - Kit de d√©marrage ESP32
        - 320+
        - |link_esp32_starter_kit|

Vous pouvez √©galement les acheter s√©par√©ment via les liens ci-dessous.

.. list-table::
    :widths: 30 20
    :header-rows: 1

    *   - INTRODUCTION DES COMPOSANTS
        - LIEN D'ACHAT

    *   - :ref:`cpn_esp32_wroom_32e`
        - |link_esp32_wroom_32e_buy|
    *   - :ref:`cpn_esp32_camera_extension`
        - |link_esp32_extension_board|
    *   - :ref:`cpn_wires`
        - |link_wires_buy|
    *   - :ref:`cpn_avoid`
        - |link_avoid_buy|

**Broches disponibles**

* **Broches disponibles**

    Voici une liste des broches disponibles sur la carte ESP32 pour ce projet.

    .. list-table::
        :widths: 5 20

        *   - Broches disponibles
            - IO13, IO14, IO27, IO26, IO25, IO33, I35, I34, I39, I36, IO4, IO18, IO19, IO21, IO22, IO23

* **Broches de d√©marrage (entr√©e)**

    Les broches de d√©marrage sont un ensemble sp√©cial de broches utilis√©es pour d√©terminer les modes de d√©marrage sp√©cifiques lors du d√©marrage de l'appareil 
    (c'est-√†-dire, reset √† la mise sous tension).
   
    .. list-table::
        :widths: 5 15

        *   - Broches de d√©marrage
            - IO5, IO0, IO2, IO12, IO15 
    
    En g√©n√©ral, il est **non recommand√© de les utiliser comme broches d'entr√©e**. Si vous souhaitez utiliser ces broches, consid√©rez l'impact potentiel sur le processus de d√©marrage. Pour plus de d√©tails, veuillez consulter la section :ref:`esp32_strapping`.

**Sch√©ma**

.. image:: ../../img/circuit/circuit_5.3_avoid.png

Lorsque le module d'√©vitement d'obstacles ne d√©tecte aucun obstacle, IO14 renvoie un niveau haut. Cependant, lorsqu'il d√©tecte un obstacle, il renvoie un niveau bas. Vous pouvez ajuster le potentiom√®tre bleu pour modifier la distance de d√©tection de ce module.

**C√¢blage**

.. image:: ../../img/wiring/5.3_avoid_bb.png

**Code**

.. note::

    * Ouvrez le fichier ``5.3_avoid.py`` situ√© dans le chemin ``esp32-starter-kit-main\micropython\codes``, ou copiez et collez le code dans Thonny. Ensuite, cliquez sur "Ex√©cuter le script actuel" ou appuyez sur F5 pour l'ex√©cuter.
    * Assurez-vous de s√©lectionner l'interpr√©teur "MicroPython (ESP32).COMxx" dans le coin inf√©rieur droit. 



.. code-block:: python

    import machine
    import time

    ir_avoid = machine.Pin(14, machine.Pin.IN, machine.Pin.PULL_UP) # pin du module d'√©vitement

    while True:

        # Afficher les valeurs du module d'√©vitement d'obstacles 
        print(ir_avoid.value()) 
        time.sleep(0.1)


Lorsque le programme est en cours d'ex√©cution, si le module d'√©vitement d'obstacles IR d√©tecte un obstacle devant lui, la valeur "0" sera affich√©e sur le Moniteur S√©rie, sinon la valeur "1" sera affich√©e.
