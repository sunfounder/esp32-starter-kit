.. note::

    Bonjour, bienvenue dans la communaut√© des passionn√©s de SunFounder Raspberry Pi, Arduino et ESP32 sur Facebook ! Plongez au c≈ìur des Raspberry Pi, Arduino et ESP32 avec d'autres passionn√©s.

    **Pourquoi nous rejoindre ?**

    - **Support d'experts** : R√©solvez les probl√®mes apr√®s-vente et les d√©fis techniques avec l'aide de notre communaut√© et de notre √©quipe.
    - **Apprendre et partager** : √âchangez des astuces et des tutoriels pour am√©liorer vos comp√©tences.
    - **Aper√ßus exclusifs** : Acc√©dez en avant-premi√®re aux annonces de nouveaux produits et aux avant-premi√®res.
    - **R√©ductions sp√©ciales** : Profitez de r√©ductions exclusives sur nos derniers produits.
    - **Promotions festives et cadeaux** : Participez √† des tirages au sort et √† des promotions festives.

    üëâ Pr√™t √† explorer et √† cr√©er avec nous ? Cliquez sur [|link_sf_facebook|] et rejoignez-nous d√®s aujourd'hui !

.. _py_photoresistor:

5.7 Ressentir la Lumi√®re
=============================

La photo-r√©sistance est un dispositif couramment utilis√© pour les entr√©es analogiques, similaire √† un potentiom√®tre. Sa valeur de r√©sistance change en fonction de l'intensit√© lumineuse qu'elle re√ßoit. Lorsqu'elle est expos√©e √† une forte lumi√®re, la r√©sistance de la photo-r√©sistance diminue, et √† mesure que l'intensit√© lumineuse diminue, la r√©sistance augmente.

En lisant la valeur de la photo-r√©sistance, nous pouvons recueillir des informations sur les conditions de lumi√®re ambiante. Ces informations peuvent √™tre utilis√©es pour des t√¢ches telles que le contr√¥le de la luminosit√© d'une LED, l'ajustement de la sensibilit√© d'un capteur, ou la mise en ≈ìuvre d'actions d√©pendantes de la lumi√®re dans un projet.

**Composants n√©cessaires**

Dans ce projet, nous aurons besoin des composants suivants. 

Il est d√©finitivement pratique d'acheter un kit complet, voici le lien :

.. list-table::
    :widths: 20 20 20
    :header-rows: 1

    *   - Nom	
        - ARTICLES DANS CE KIT
        - LIEN
    *   - Kit de d√©marrage ESP32
        - 320+
        - |link_esp32_starter_kit|

Vous pouvez √©galement les acheter s√©par√©ment via les liens ci-dessous.

.. list-table::
    :widths: 30 20
    :header-rows: 1

    *   - INTRODUCTION DES COMPOSANTS
        - LIEN D'ACHAT

    *   - :ref:`cpn_esp32_wroom_32e`
        - |link_esp32_wroom_32e_buy|
    *   - :ref:`cpn_esp32_camera_extension`
        - |link_esp32_extension_board|
    *   - :ref:`cpn_breadboard`
        - |link_breadboard_buy|
    *   - :ref:`cpn_wires`
        - |link_wires_buy|
    *   - :ref:`cpn_resistor`
        - |link_resistor_buy|
    *   - :ref:`cpn_photoresistor`
        - |link_photoresistor_buy|

**Broches disponibles**

* **Broches disponibles**

    Voici une liste des broches disponibles sur la carte ESP32 pour ce projet.

    .. list-table::
        :widths: 5 15

        *   - Broches disponibles
            - IO14, IO25, I35, I34, I39, I36


* **Broches de Strapping**

    Les broches suivantes sont des broches de strapping, qui affectent le processus de d√©marrage de l'ESP32 lors de la mise sous tension ou de la r√©initialisation. Cependant, une fois l'ESP32 d√©marr√© avec succ√®s, elles peuvent √™tre utilis√©es comme des broches r√©guli√®res.

    .. list-table::
        :widths: 5 15

        *   - Broches de Strapping
            - IO0, IO12

**Sch√©ma**

.. image:: ../../img/circuit/circuit_5.7_photoresistor.png

√Ä mesure que l'intensit√© lumineuse augmente, la r√©sistance de la photo-r√©sistance (LDR) diminue, entra√Ænant une diminution de la valeur lue sur I35.

**C√¢blage**

.. image:: ../../img/wiring/5.7_photoresistor_bb.png

**Code**

.. note::

    * Ouvrez le fichier ``5.7_feel_the_light.py`` situ√© dans le chemin ``esp32-starter-kit-main\micropython\codes``, ou copiez et collez le code dans Thonny. Puis cliquez sur "Run Current Script" ou appuyez sur F5 pour l'ex√©cuter.
    * Assurez-vous de s√©lectionner l'interpr√©teur "MicroPython (ESP32).COMxx" dans le coin inf√©rieur droit. 



.. code-block:: python

    from machine import ADC, Pin
    import time

    # cr√©er un objet ADC agissant sur une broche
    photoresistor = ADC(Pin(35, Pin.IN))

    # Configurer l'att√©nuation ADC √† 11dB pour la pleine √©chelle     
    photoresistor.atten(photoresistor.ATTN_11DB)

    while True:

        # lire une valeur analogique brute dans la plage 0-4095
        value = photoresistor.read()  
        print(value)
        time.sleep(0.05)


Apr√®s l'ex√©cution du programme, les valeurs de la photo-r√©sistance seront affich√©es dans le Shell. Vous pouvez √©clairer celle-ci avec une lampe de poche ou la couvrir avec votre main pour voir comment la valeur change.


* ``atten(photoresistor.ATTN_11DB)`` : Configurer l'att√©nuation de l'ADC √† 11dB pour la pleine √©chelle.

    Pour lire des tensions sup√©rieures √† la tension de r√©f√©rence, appliquez une att√©nuation d'entr√©e avec l'argument de mot-cl√© atten. 

    Les valeurs valides (et les plages de mesure lin√©aire approximatives) sont :

    * ADC.ATTN_0DB : Pas d'att√©nuation (100mV - 950mV)
    * ADC.ATTN_2_5DB : Att√©nuation de 2,5 dB (100mV - 1250mV)
    * ADC.ATTN_6DB : Att√©nuation de 6 dB (150mV - 1750mV)
    * ADC.ATTN_11DB : Att√©nuation de 11 dB (150mV - 2450mV)

* `machine.ADC - MicroPython Docs <https://docs.micropython.org/en/latest/esp32/quickref.html#adc-analog-to-digital-conversion>`_

