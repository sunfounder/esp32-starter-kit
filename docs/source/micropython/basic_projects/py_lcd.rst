.. note::

    Bonjour, bienvenue dans la communaut√© SunFounder Raspberry Pi & Arduino & ESP32 Enthusiasts sur Facebook ! Plongez dans l'univers de Raspberry Pi, Arduino et ESP32 avec d'autres passionn√©s.

    **Pourquoi nous rejoindre ?**

    - **Support d'experts** : R√©solvez les probl√®mes apr√®s-vente et les d√©fis techniques avec l'aide de notre communaut√© et de notre √©quipe.
    - **Apprendre et partager** : √âchangez des astuces et des tutoriels pour am√©liorer vos comp√©tences.
    - **Aper√ßus exclusifs** : Acc√©dez en avant-premi√®re aux annonces de nouveaux produits et aux avant-premi√®res.
    - **R√©ductions sp√©ciales** : Profitez de r√©ductions exclusives sur nos derniers produits.
    - **Promotions festives et cadeaux** : Participez √† des tirages au sort et √† des promotions sp√©ciales pour les f√™tes.

    üëâ Pr√™t √† explorer et cr√©er avec nous ? Cliquez sur [|link_sf_facebook|] et rejoignez-nous d√®s aujourd'hui !

.. _py_lcd1602:

2.6 Afficher des caract√®res
==================================================

Nous allons maintenant explorer le monde fascinant de l'affichage de caract√®res en utilisant le module I2C LCD1602.

√Ä travers ce projet, nous apprendrons comment initialiser le module LCD, d√©finir les param√®tres d'affichage souhait√©s et envoyer des donn√©es de caract√®res √† afficher √† l'√©cran. Nous pourrons afficher des messages personnalis√©s, afficher des relev√©s de capteurs ou cr√©er des menus interactifs. Les possibilit√©s sont infinies !

En ma√Ætrisant l'art de l'affichage de caract√®res sur l'I2C LCD1602, nous ouvrirons de nouvelles voies pour la communication et l'affichage d'informations dans nos projets. Plongeons dans ce voyage passionnant et donnons vie √† nos caract√®res sur l'√©cran LCD.

**Composants n√©cessaires**

Dans ce projet, nous aurons besoin des composants suivants. 

Il est d√©finitivement pratique d'acheter un kit complet, voici le lien : 

.. list-table::
    :widths: 20 20 20
    :header-rows: 1

    *   - Nom	
        - ARTICLES DANS CE KIT
        - LIEN
    *   - Kit de d√©marrage ESP32
        - 320+
        - |link_esp32_starter_kit|

Vous pouvez √©galement les acheter s√©par√©ment via les liens ci-dessous.

.. list-table::
    :widths: 30 20
    :header-rows: 1

    *   - INTRODUCTION DES COMPOSANTS
        - LIEN D'ACHAT

    *   - :ref:`cpn_esp32_wroom_32e`
        - |link_esp32_wroom_32e_buy|
    *   - :ref:`cpn_esp32_camera_extension`
        - |link_esp32_extension_board|
    *   - :ref:`cpn_wires`
        - |link_wires_buy|
    *   - :ref:`cpn_lcd`
        - |link_i2clcd1602_buy|

**Broches disponibles**

Voici une liste des broches disponibles sur la carte ESP32 pour ce projet.

.. list-table::
    :widths: 5 15
    :header-rows: 1

    *   - Broches disponibles
        - Description d'utilisation

    *   - IO21
        - SDA
    *   - IO22
        - SCL
    
**Sch√©ma**

.. image:: ../../img/circuit/circuit_2.6_lcd.png

**C√¢blage**

.. image:: ../../img/wiring/2.6_i2clcd1602_bb.png
    :width: 800

**Code**

.. note::

    * Ouvrez le fichier ``2.6_liquid_crystal_display.py`` situ√© dans le chemin ``esp32-starter-kit-main\micropython\codes``, ou copiez et collez le code dans Thonny. Ensuite, cliquez sur "Ex√©cuter le script actuel" ou appuyez sur F5 pour l'ex√©cuter.
    * Assurez-vous de s√©lectionner l'interpr√©teur "MicroPython (ESP32).COMxx" dans le coin inf√©rieur droit. 
    * La biblioth√®que ``lcd1602.py`` est utilis√©e ici, assurez-vous qu'elle est t√©l√©charg√©e sur l'ESP32. Pour un tutoriel d√©taill√©, consultez :ref:`add_libraries_py`.

.. code-block:: python

    # Importer la classe LCD du module lcd1602
    from lcd1602 import LCD

    import time

    # Cr√©er une instance de la classe LCD et l'assigner √† la variable lcd
    lcd = LCD()
    # D√©finir la cha√Æne " Hello!\n"
    string = " Hello!\n"
    # Afficher la cha√Æne sur l'√©cran LCD
    lcd.message(string)

    time.sleep(2)
    # D√©finir la cha√Æne " Sunfounder!"
    string = "    Sunfounder!"
    # Afficher la cha√Æne sur l'√©cran LCD
    lcd.message(string)

    time.sleep(2)
    # Effacer l'√©cran LCD
    lcd.clear()


Apr√®s l'ex√©cution du script, vous pourrez voir deux lignes de texte appara√Ætre sur l'√©cran LCD √† tour de r√¥le, puis dispara√Ætre.


.. note:: 

    Si le code et le c√¢blage sont corrects mais que l'√©cran LCD ne parvient toujours pas √† afficher du contenu, vous pouvez ajuster le potentiom√®tre √† l'arri√®re pour augmenter le contraste.


**Comment √ßa fonctionne ?**

Dans la biblioth√®que ``lcd1602``, nous int√©grons les fonctions pertinentes de lcd1602 dans la classe LCD.

#. Importer le module ``lcd1602``.

    .. code-block:: python

        from lcd1602 import LCD    

#. D√©clarer un objet de la classe ``LCD`` et le nommer ``lcd``.

    .. code-block:: python

        lcd = LCD()

#. Cette instruction affichera le texte sur le LCD. Il convient de noter que l'argument doit √™tre de type cha√Æne. Si nous voulons passer un entier ou un flottant, nous devons utiliser l'instruction de conversion forc√©e ``str()``.

    .. code-block:: python

        lcd.message(string)


#. Si vous appelez cette instruction plusieurs fois, le LCD superposera les textes. Il est donc n√©cessaire d'utiliser l'instruction suivante pour effacer l'affichage.

    .. code-block:: python

        lcd.clear()
