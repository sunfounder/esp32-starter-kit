.. note::

    Bonjour, bienvenue dans la communaut√© SunFounder Raspberry Pi & Arduino & ESP32 Enthusiasts sur Facebook ! Plongez dans l'univers de Raspberry Pi, Arduino et ESP32 avec d'autres passionn√©s.

    **Pourquoi nous rejoindre ?**

    - **Support d'experts** : R√©solvez les probl√®mes apr√®s-vente et les d√©fis techniques avec l'aide de notre communaut√© et de notre √©quipe.
    - **Apprendre et partager** : √âchangez des astuces et des tutoriels pour am√©liorer vos comp√©tences.
    - **Aper√ßus exclusifs** : Acc√©dez en avant-premi√®re aux annonces de nouveaux produits et aux avant-premi√®res.
    - **R√©ductions sp√©ciales** : Profitez de r√©ductions exclusives sur nos derniers produits.
    - **Promotions festives et cadeaux** : Participez √† des tirages au sort et √† des promotions sp√©ciales pour les f√™tes.

    üëâ Pr√™t √† explorer et cr√©er avec nous ? Cliquez sur [|link_sf_facebook|] et rejoignez-nous d√®s aujourd'hui !

.. _py_light_theremin:

6.3 Th√©r√©mine lumineux
=========================

Le th√©r√©mine est un instrument de musique √©lectronique qui ne n√©cessite pas de contact physique. En fonction de la position de la main du joueur, il produit diff√©rents tons.

Sa partie de contr√¥le est g√©n√©ralement compos√©e de deux antennes m√©talliques qui d√©tectent la position des mains du th√©r√©ministe et contr√¥lent les oscillateurs avec une main et le volume avec l'autre. Les signaux √©lectriques du th√©r√©mine sont amplifi√©s et envoy√©s √† un haut-parleur.

Nous ne pouvons pas reproduire le m√™me instrument avec l'ESP32, mais nous pouvons utiliser une photo-r√©sistance et un buzzer passif pour obtenir un gameplay similaire.

* `Theremin - Wikipedia <https://en.wikipedia.org/wiki/Theremin>`_

**Composants n√©cessaires**

Dans ce projet, nous aurons besoin des composants suivants. 

Il est d√©finitivement pratique d'acheter un kit complet, voici le lien : 

.. list-table::
    :widths: 20 20 20
    :header-rows: 1

    *   - Nom	
        - ARTICLES DANS CE KIT
        - LIEN
    *   - Kit de d√©marrage ESP32
        - 320+
        - |link_esp32_starter_kit|

Vous pouvez √©galement les acheter s√©par√©ment via les liens ci-dessous.

.. list-table::
    :widths: 30 20
    :header-rows: 1

    *   - INTRODUCTION DES COMPOSANTS
        - LIEN D'ACHAT

    *   - :ref:`cpn_esp32_wroom_32e`
        - |link_esp32_wroom_32e_buy|
    *   - :ref:`cpn_esp32_camera_extension`
        - |link_esp32_extension_board|
    *   - :ref:`cpn_breadboard`
        - |link_breadboard_buy|
    *   - :ref:`cpn_wires`
        - |link_wires_buy|
    *   - :ref:`cpn_resistor`
        - |link_resistor_buy|
    *   - :ref:`cpn_led`
        - |link_led_buy|
    *   - :ref:`cpn_photoresistor`
        - |link_photoresistor_buy|
    *   - :ref:`cpn_buzzer`
        - |link_passive_buzzer_buy|
    *   - :ref:`cpn_transistor`
        - |link_transistor_buy|

**Sch√©ma**

.. image:: ../../img/circuit/circuit_6.3_light_theremin.png

Avant de commencer le projet, calibrez la plage d'intensit√© lumineuse en agitant votre main au-dessus de la photo-r√©sistance. La LED connect√©e √† IO26 est utilis√©e comme indicateur pendant le processus de calibration. Lorsque la LED s'allume, cela signifie le d√©but de la calibration, et lorsqu'elle s'√©teint, cela indique la fin de la calibration.

En agitant votre main au-dessus de la photo-r√©sistance, la valeur de cette derni√®re 
changera en cons√©quence. Utilisez ce changement pour contr√¥ler le buzzer et jouer 
diff√©rentes notes de musique. Chaque variation de la valeur de la photo-r√©sistance 
peut √™tre associ√©e √† une note musicale sp√©cifique, permettant au buzzer de produire 
une m√©lodie lorsque vous agitez votre main au-dessus de la photo-r√©sistance.


**C√¢blage**

.. image:: ../../img/wiring/6.3_theremin_bb.png

**Code**

.. note::

    * Ouvrez le fichier ``6.3_light_theremin.py`` situ√© dans le chemin ``esp32-starter-kit-main\micropython\codes``, ou copiez et collez le code dans Thonny. Puis cliquez sur "Run Current Script" ou appuyez sur F5 pour l'ex√©cuter.
    * Assurez-vous de s√©lectionner l'interpr√©teur "MicroPython (ESP32).COMxx" dans le coin inf√©rieur droit. 


.. code-block:: python

    from machine import Pin, PWM, ADC
    import time

    # Initialiser la broche LED
    led = Pin(26, Pin.OUT)

    # Initialiser le capteur de lumi√®re
    sensor = ADC(Pin(35))
    sensor.atten(ADC.ATTN_11DB)

    # Initialiser le buzzer
    buzzer = PWM(Pin(13), freq=440, duty=0)

    light_low=4095
    light_high=0

    # Mapper l'intervalle des valeurs d'entr√©e aux valeurs de sortie
    def interval_mapping(x, in_min, in_max, out_min, out_max):
        return (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_min

    # Cr√©er une tonalit√© en utilisant la broche sp√©cifi√©e, la fr√©quence et la dur√©e
    def tone(pin,frequency,duration):
        pin.freq(frequency)
        pin.duty(512)
        time.sleep_ms(duration)
        pin.duty(0)

    # Calibrer les valeurs maximum et minimum de la photo-r√©sistance en 5 secondes.
    timer_init_start = time.ticks_ms()
    led.value(1) # allumer la LED   
    while time.ticks_diff(time.ticks_ms(), timer_init_start)<5000:
        light_value = sensor.read()
        if light_value > light_high:
            light_high = light_value
        if light_value < light_low:
            light_low = light_value   
    led.value(0) # √©teindre la LED 

    # Jouer les tonalit√©s en fonction des valeurs de lumi√®re
    while True:
        light_value  = sensor.read()
        pitch = int(interval_mapping(light_value,light_low,light_high,50,6000))
        if pitch > 50 :
            tone(buzzer,pitch,20)
        time.sleep_ms(10)


Au d√©marrage du programme, la LED s'allume, nous offrant une fen√™tre de cinq secondes 
pour calibrer la plage de d√©tection de la photo-r√©sistance.

La calibration est une √©tape cruciale car elle prend en compte les diverses conditions 
d'√©clairage que nous pouvons rencontrer lors de l'utilisation de l'appareil, telles que 
les diff√©rentes intensit√©s lumineuses pendant les diff√©rentes heures de la journ√©e. De 
plus, le processus de calibration prend en compte la distance entre nos mains et la 
photo-r√©sistance, ce qui d√©termine la plage de jeu de l'instrument.

Une fois la p√©riode de calibration termin√©e, la LED s'√©teint, indiquant que nous 
pouvons maintenant jouer de l'instrument en agitant nos mains au-dessus de la 
photo-r√©sistance. Cette configuration nous permet de cr√©er de la musique en ajustant 
la hauteur de nos mains, offrant une exp√©rience interactive et agr√©able.
