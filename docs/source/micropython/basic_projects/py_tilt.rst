.. note::

    Bonjour et bienvenue dans la communaut√© des passionn√©s de SunFounder Raspberry Pi, Arduino et ESP32 sur Facebook ! Plongez dans l'univers des Raspberry Pi, Arduino et ESP32 avec d'autres passionn√©s.

    **Pourquoi nous rejoindre ?**

    - **Support d'experts** : R√©solvez les probl√®mes apr√®s-vente et les d√©fis techniques avec l'aide de notre communaut√© et de notre √©quipe.
    - **Apprendre et partager** : √âchangez des astuces et des tutoriels pour am√©liorer vos comp√©tences.
    - **Aper√ßus exclusifs** : Acc√©dez en avant-premi√®re aux annonces de nouveaux produits et aux avant-premi√®res.
    - **R√©ductions sp√©ciales** : Profitez de r√©ductions exclusives sur nos derniers produits.
    - **Promotions festives et cadeaux** : Participez √† des tirages au sort et √† des promotions festives.

    üëâ Pr√™t √† explorer et √† cr√©er avec nous ? Cliquez sur [|link_sf_facebook|] et rejoignez-nous d√®s aujourd'hui !

.. _py_tilt:

5.2 Interrupteur d'inclinaison
======================================

L'interrupteur d'inclinaison est un dispositif simple mais efficace √† 2 broches qui contient une bille m√©tallique en son centre. Lorsque l'interrupteur est en position verticale, les deux broches sont √©lectriquement connect√©es, permettant au courant de passer. Cependant, lorsque l'interrupteur est inclin√© ou pench√© √† un certain angle, la bille m√©tallique se d√©place et rompt la connexion √©lectrique entre les broches.

Dans ce projet, nous utiliserons l'interrupteur d'inclinaison pour contr√¥ler l'√©clairage d'une LED. En positionnant l'interrupteur de mani√®re √† d√©clencher l'action d'inclinaison, nous pouvons allumer et √©teindre la LED en fonction de l'orientation de l'interrupteur.

**Composants n√©cessaires**

Dans ce projet, nous aurons besoin des composants suivants.

Il est certainement pratique d'acheter un kit complet, voici le lien :

.. list-table::
    :widths: 20 20 20
    :header-rows: 1

    *   - Nom
        - ARTICLES DANS CE KIT
        - LIEN
    *   - Kit de d√©marrage ESP32
        - 320+
        - |link_esp32_starter_kit|

Vous pouvez √©galement les acheter s√©par√©ment via les liens ci-dessous.

.. list-table::
    :widths: 30 20
    :header-rows: 1

    *   - INTRODUCTION DES COMPOSANTS
        - LIEN D'ACHAT

    *   - :ref:`cpn_esp32_wroom_32e`
        - |link_esp32_wroom_32e_buy|
    *   - :ref:`cpn_esp32_camera_extension`
        - |link_esp32_extension_board|
    *   - :ref:`cpn_breadboard`
        - |link_breadboard_buy|
    *   - :ref:`cpn_wires`
        - |link_wires_buy|
    *   - :ref:`cpn_resistor`
        - |link_resistor_buy|
    *   - :ref:`cpn_led`
        - |link_led_buy|
    *   - :ref:`cpn_tilt`
        - \-

**Broches disponibles**

* **Broches disponibles**

    Voici une liste des broches disponibles sur la carte ESP32 pour ce projet.

    .. list-table::
        :widths: 5 20

        *   - Pour entr√©e
            - IO14, IO25, I35, I34, I39, I36, IO18, IO19, IO21, IO22, IO23
        *   - Pour sortie
            - IO13, IO12, IO14, IO27, IO26, IO25, IO33, IO32, IO15, IO2, IO0, IO4, IO5, IO18, IO19, IO21, IO22, IO23
    
* **Broches d'utilisation conditionnelle (entr√©e)**

    Les broches suivantes ont des r√©sistances de pull-up ou pull-down int√©gr√©es, donc des r√©sistances externes ne sont pas n√©cessaires lorsque **vous les utilisez comme broches d'entr√©e** :

    .. list-table::
        :widths: 5 15
        :header-rows: 1

        *   - Broches d'utilisation conditionnelle
            - Description
        *   - IO13, IO15, IO2, IO4
            - Tirer vers le haut avec une r√©sistance de 47K par d√©faut.
        *   - IO27, IO26, IO33
            - Tirer vers le haut avec une r√©sistance de 4.7K par d√©faut.
        *   - IO32
            - Tirer vers le bas avec une r√©sistance de 1K par d√©faut.

* **Broches de strap (entr√©e)**

    Les broches de strap sont un ensemble sp√©cial de broches utilis√©es pour d√©terminer des modes de d√©marrage sp√©cifiques lors de la mise sous tension de l'appareil 
    (c'est-√†-dire r√©initialisation par mise sous tension).

    .. list-table::
        :widths: 5 15

        *   - Broches de strap
            - IO5, IO0, IO2, IO12, IO15 

    En g√©n√©ral, il est **non recommand√© de les utiliser comme broches d'entr√©e**. Si vous souhaitez utiliser ces broches, prenez en compte l'impact potentiel sur le processus de d√©marrage. Pour plus de d√©tails, veuillez vous r√©f√©rer √† la section :ref:`esp32_strapping`.


**Sch√©ma**

.. image:: ../../img/circuit/circuit_5.2_tilt.png

Lorsque l'interrupteur d'inclinaison est en position verticale, IO14 sera r√©gl√© sur haut, ce qui allumera la LED. √Ä l'inverse, lorsque l'interrupteur d'inclinaison est inclin√©, IO14 sera r√©gl√© sur bas, ce qui √©teindra la LED.

Le but de la r√©sistance de 10K est de maintenir un √©tat bas stable pour IO14 lorsque l'interrupteur d'inclinaison est en position inclin√©e.


**C√¢blage**

.. image:: ../../img/wiring/5.2_tilt_switch_bb.png

**Code**

.. note::

    * Ouvrez le fichier ``5.2_tilt_switch.py`` situ√© dans le chemin ``esp32-starter-kit-main\micropython\codes``, ou copiez et collez le code dans Thonny. Puis cliquez sur "Run Current Script" ou appuyez sur F5 pour l'ex√©cuter.
    * Assurez-vous de s√©lectionner l'interpr√©teur "MicroPython (ESP32).COMxx" dans le coin inf√©rieur droit.

.. code-block:: python

    import machine
    import time

    switch = machine.Pin(14, machine.Pin.IN) # Broche de l'interrupteur d'inclinaison
    led = machine.Pin(26, machine.Pin.OUT) # Broche de la LED

    while True:
        # V√©rifiez si l'interrupteur est inclin√© en lisant sa valeur
        if switch.value() == 1:
            # Allumez la LED en r√©glant sa valeur sur 1
            led.value(1)
        else:
            # √âteignez la LED
            led.value(0)

Lorsque le script est en cours d'ex√©cution, la LED s'allumera lorsque l'interrupteur est en position verticale et s'√©teindra lorsque l'interrupteur est inclin√©.
