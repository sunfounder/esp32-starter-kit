.. note::

    Hallo und willkommen in der SunFounder Raspberry Pi & Arduino & ESP32 Enthusiasten-Gemeinschaft auf Facebook! Tauchen Sie tiefer ein in die Welt von Raspberry Pi, Arduino und ESP32 mit anderen Enthusiasten.

    **Warum beitreten?**

    - **ExpertenunterstÃ¼tzung**: LÃ¶sen Sie Nachverkaufsprobleme und technische Herausforderungen mit Hilfe unserer Gemeinschaft und unseres Teams.
    - **Lernen & Teilen**: Tauschen Sie Tipps und Anleitungen aus, um Ihre FÃ¤higkeiten zu verbessern.
    - **Exklusive Vorschauen**: Erhalten Sie frÃ¼hzeitigen Zugang zu neuen ProduktankÃ¼ndigungen und exklusiven Einblicken.
    - **Spezialrabatte**: GenieÃŸen Sie exklusive Rabatte auf unsere neuesten Produkte.
    - **Festliche Aktionen und Gewinnspiele**: Nehmen Sie an Gewinnspielen und Feiertagsaktionen teil.

    ðŸ‘‰ Sind Sie bereit, mit uns zu erkunden und zu erschaffen? Klicken Sie auf [|link_sf_facebook|] und treten Sie heute bei!

1.5 Schnelle Anleitung zu Thonny
==================================

.. _open_run_code_py:

Code Direkt Ã–ffnen und AusfÃ¼hren
---------------------------------------------

Der Codeabschnitt in den Projekten zeigt genau an, welcher Code verwendet wird. Doppelklicken Sie daher auf die Datei ``.py`` mit der Seriennummer im Pfad ``esp32-starter-kit-main\micropython\codes\``, um sie zu Ã¶ffnen.

Zuvor mÃ¼ssen Sie jedoch das Paket herunterladen und die Bibliotheken hochladen, wie in :ref:`add_libraries_py` beschrieben.

1. Code Ã¶ffnen.

    Zum Beispiel ``1.1_hello_led.py``.

    Wenn Sie darauf doppelklicken, Ã¶ffnet sich ein neues Fenster auf der rechten Seite. Sie kÃ¶nnen gleichzeitig mehr als einen Code Ã¶ffnen.

    .. image:: img/quick_guide1.png

2. Stecken Sie den esp32 mit einem Mikro-USB-Kabel in Ihren Computer.

    .. image:: ../../img/plugin_esp32.png

3. Richtigen Interpreter auswÃ¤hlen

    WÃ¤hlen Sie den Interpreter "MicroPython (ESP32).COMxx".

    .. image:: img/sec_inter.png

4. Den Code ausfÃ¼hren

    Um das Skript auszufÃ¼hren, klicken Sie auf die SchaltflÃ¤che **Run current script** oder drÃ¼cken Sie F5.

    .. image:: img/quick_guide2.png

    Wenn der Code Informationen enthÃ¤lt, die gedruckt werden mÃ¼ssen, erscheinen sie in der Shell; ansonsten erscheint nur die folgende Information.

    Klicken Sie auf **View** -> **Edit**, um das Shell-Fenster zu Ã¶ffnen, wenn es in Ihrem Thonny nicht erscheint.

        .. code-block::

            MicroPython v1.19.1 on 2022-06-18; ESP32 module with ESP32

            Type "help()" for more information.

            >>> %Run -c $EDITOR_CONTENT

    * Die erste Zeile zeigt die Version von MicroPython, das Datum und Informationen zu Ihrem GerÃ¤t.
    * Die zweite Zeile fordert Sie auf, "help()" einzugeben, um Hilfe zu erhalten.
    * Die dritte Zeile ist ein Befehl von Thonny, der den MicroPython-Interpreter auf Ihrem Pico W anweist, den Inhalt des Skriptbereichs - "EDITOR_CONTENT" - auszufÃ¼hren.
    * Wenn nach der dritten Zeile eine Nachricht erscheint, handelt es sich normalerweise um eine Nachricht, die Sie MicroPython ausdrucken lassen, oder um eine Fehlermeldung fÃ¼r den Code.


5. AusfÃ¼hrung stoppen

    .. image:: img/quick_guide3.png

    Um den laufenden Code zu stoppen, klicken Sie auf die SchaltflÃ¤che **Stop/Restart backend**. Der Befehl **%RUN -c $EDITOR_CONTENT** verschwindet nach dem Stoppen.

6. Speichern oder Speichern unter

    Sie kÃ¶nnen Ã„nderungen, die Sie am geÃ¶ffneten Beispiel vorgenommen haben, speichern, indem Sie **Ctrl+S** drÃ¼cken oder auf die SchaltflÃ¤che **Save** in Thonny klicken.

    Der Code kann als separate Datei innerhalb des **MicroPython drive(ESP32)** gespeichert werden, indem Sie auf **File** -> **Save As** klicken.

    .. image:: img/quick_guide4.png

    WÃ¤hlen Sie **MicroPython drive**.

    .. image:: img/quick_guide5.png
        
    Klicken Sie dann auf **OK**, nachdem Sie den Dateinamen und die Erweiterung **.py** eingegeben haben. Auf dem MicroPython-Laufwerk sehen Sie Ihre gespeicherte Datei.

    .. image:: img/quick_guide6.png

    .. note::
        UnabhÃ¤ngig davon, welchen Namen Sie Ihrem Code geben, ist es am besten, zu beschreiben, um welche Art von Code es sich handelt, und ihm keinen bedeutungslosen Namen wie ``abc.py`` zu geben.
        Wenn Sie den Code als ``main.py`` speichern, wird er automatisch ausgefÃ¼hrt, wenn der Strom eingeschaltet wird.


Datei Erstellen und AusfÃ¼hren
-----------------------------

Der Code wird direkt im Codeabschnitt angezeigt. Sie kÃ¶nnen ihn in Thonny kopieren und wie folgt ausfÃ¼hren.

1. Eine neue Datei erstellen

    Ã–ffnen Sie die Thonny IDE, klicken Sie auf die SchaltflÃ¤che **New**, um eine neue leere Datei zu erstellen.

    .. image:: img/quick_guide7.png

2. Code kopieren

    Kopieren Sie den Code aus dem Projekt in die Thonny IDE.

    .. image:: img/quick_guide8.png

3. Stecken Sie den esp32 mit einem Mikro-USB-Kabel in Ihren Computer.

    .. image:: ../../img/plugin_esp32.png

4. Richtigen Interpreter auswÃ¤hlen

    WÃ¤hlen Sie in der unteren rechten Ecke den Interpreter "MicroPython (ESP32).COMxx".

    .. image:: img/sec_inter.png

5. Den Code ausfÃ¼hren

    Sie mÃ¼ssen auf **Run Current Script** klicken oder einfach â€žF5â€œ drÃ¼cken, um es auszufÃ¼hren.

    .. image:: img/quick_guide9.png

    Wenn der Code Informationen enthÃ¤lt, die gedruckt werden mÃ¼ssen, erscheinen sie in der Shell; ansonsten erscheint nur die folgende Information.

    Klicken Sie auf **View** -> **Edit**, um das Shell-Fenster zu Ã¶ffnen, wenn es in Ihrem Thonny nicht erscheint.

        .. code-block::

            MicroPython v1.19.1 on 2022-06-18; ESP32 module with ESP32

            Type "help()" for more information.

            >>> %Run -c $EDITOR_CONTENT

    * Die erste Zeile zeigt die Version von MicroPython, das Datum und Informationen zu Ihrem GerÃ¤t.
    * Die zweite Zeile fordert Sie auf, "help()" einzugeben, um Hilfe zu erhalten.
    * Die dritte Zeile ist ein Befehl von Thonny, der den MicroPython-Interpreter auf Ihrem Pico W anweist, den Inhalt des Skriptbereichs - "EDITOR_CONTENT" - auszufÃ¼hren.
    * Wenn nach der dritten Zeile eine Nachricht erscheint, handelt es sich normalerweise um eine Nachricht, die Sie MicroPython ausdrucken lassen, oder um eine Fehlermeldung fÃ¼r den Code.


6. AusfÃ¼hrung stoppen

    .. image:: img/quick_guide3.png

    Um den laufenden Code zu stoppen, klicken Sie auf die SchaltflÃ¤che **Stop/Restart backend**. Der Befehl **%RUN -c $EDITOR_CONTENT** verschwindet nach dem Stoppen.

7. Speichern oder Speichern unter

    Sie kÃ¶nnen den Code speichern, indem Sie **Ctrl+S** drÃ¼cken oder auf die SchaltflÃ¤che **Save** in Thonny klicken. Im aufpoppenden Fenster wÃ¤hlen Sie den Ort, an dem Sie die Datei speichern mÃ¶chten.

    .. image:: img/quick_guide5.png
        
    Klicken Sie dann nach Eingabe des Dateinamens und der Erweiterung **.py** auf **OK** oder **Save**.

    .. image:: img/quick_guide6.png

    .. note::
        UnabhÃ¤ngig davon, welchen Namen Sie Ihrem Code geben, ist es am besten, zu beschreiben, um welche Art von Code es sich handelt, und ihm keinen bedeutungslosen Namen wie ``abc.py`` zu geben.
        Wenn Sie den Code als ``main.py`` speichern, wird er automatisch ausgefÃ¼hrt, wenn der Strom eingeschaltet wird.

8. Datei Ã¶ffnen

    Hier sind zwei MÃ¶glichkeiten, eine gespeicherte Code-Datei zu Ã¶ffnen.

    * Die erste Methode besteht darin, auf das Ã–ffnen-Symbol in der Thonny-Toolbar zu klicken, genau wie beim Speichern eines Programms. Sie werden gefragt, ob Sie es von **this computer** oder **MicroPython device** Ã¶ffnen mÃ¶chten, zum Beispiel klicken Sie auf **MicroPython device** und Sie sehen eine Liste aller Programme, die Sie auf dem ESP32 gespeichert haben.
    * Die zweite besteht darin, die Dateivorschau direkt zu Ã¶ffnen, indem Sie auf **View** -> **Files** klicken und dann auf die entsprechende ``.py``-Datei doppelklicken, um sie zu Ã¶ffnen.

