.. note::

    Bonjour, bienvenue dans la communaut√© des passionn√©s de SunFounder Raspberry Pi, Arduino et ESP32 sur Facebook ! Plongez au c≈ìur de Raspberry Pi, Arduino et ESP32 avec d'autres passionn√©s.

    **Pourquoi nous rejoindre ?**

    - **Support d'experts** : R√©solvez les probl√®mes apr√®s-vente et les d√©fis techniques avec l'aide de notre communaut√© et de notre √©quipe.
    - **Apprendre & Partager** : √âchangez des astuces et des tutoriels pour am√©liorer vos comp√©tences.
    - **Aper√ßus exclusifs** : Acc√©dez en avant-premi√®re aux nouvelles annonces de produits et aux avant-premi√®res.
    - **R√©ductions sp√©ciales** : Profitez de r√©ductions exclusives sur nos nouveaux produits.
    - **Promotions et cadeaux festifs** : Participez √† des concours et √† des promotions sp√©ciales pendant les f√™tes.

    üëâ Pr√™t √† explorer et √† cr√©er avec nous ? Cliquez sur [|link_sf_facebook|] et rejoignez-nous d√®s aujourd'hui !

.. _cpn_lcd:

I2C LCD1602
==============

.. image:: img/i2c_lcd1602.png
    :width: 800

* **GND** : Masse
* **VCC** : Alimentation, 5V.
* **SDA** : Ligne de donn√©es s√©rie. Connectez-la √† VCC via une r√©sistance de tirage.
* **SCL** : Ligne d'horloge s√©rie. Connectez-la √† VCC via une r√©sistance de tirage.

Comme nous le savons tous, bien que les √©crans LCD et certains autres affichages enrichissent consid√©rablement l'interaction homme-machine, ils partagent une faiblesse commune. Lorsqu'ils sont connect√©s √† un contr√¥leur, plusieurs ports E/S sont occup√©s, limitant ainsi les autres fonctions du contr√¥leur.

Par cons√©quent, le LCD1602 avec un module I2C a √©t√© d√©velopp√© pour r√©soudre ce probl√®me. Le module I2C int√®gre une puce PCF8574 qui convertit les donn√©es s√©rie I2C en donn√©es parall√®les pour l'affichage LCD.

* `PCF8574 Datasheet <https://www.ti.com/lit/ds/symlink/pcf8574.pdf?ts=1627006546204&ref_url=https%253A%252F%252Fwww.google.com%252F>`_

**Adresse I2C**

L'adresse par d√©faut est g√©n√©ralement 0x27, dans quelques cas elle peut √™tre 0x3F.

En prenant l'adresse par d√©faut de 0x27 comme exemple, l'adresse de l'appareil peut √™tre modifi√©e en court-circuitant les pads A0/A1/A2 ; √† l'√©tat par d√©faut, A0/A1/A2 est √† 1, et si le pad est court-circuit√©, A0/A1/A2 est √† 0.

.. image:: img/i2c_address.jpg
    :width: 600

**R√©tro√©clairage/Contraste**

Le r√©tro√©clairage peut √™tre activ√© par un capuchon de cavalier, d√©branchez le capuchon pour d√©sactiver le r√©tro√©clairage. Le potentiom√®tre bleu √† l'arri√®re est utilis√© pour ajuster le contraste (le rapport de luminosit√© entre le blanc le plus brillant et le noir le plus sombre).

.. image:: img/back_lcd1602.jpg

* **Capuchon de cavalier** : Le r√©tro√©clairage peut √™tre activ√© par ce capuchon, d√©branchez-le pour d√©sactiver le r√©tro√©clairage.
* **Potentiom√®tre** : Il est utilis√© pour ajuster le contraste (la clart√© du texte affich√©), qui augmente dans le sens des aiguilles d'une montre et diminue dans le sens inverse.

**Exemple**

* :ref:`ar_lcd1602` (Projet Arduino)
* :ref:`ar_guess_number` (Projet Arduino)
* :ref:`py_lcd1602` (Projet MicroPython)
* :ref:`py_guess_number` (Projet MicroPython)
