.. _cpn_lcd:

I2C LCD1602
==============

.. image:: img/i2c_lcd1602.png
    :width: 800

* **GND**: 接地
* **VCC**: 電源供給、5V。
* **SDA**: シリアルデータライン。プルアップ抵抗を介してVCCに接続。
* **SCL**: シリアルクロックライン。プルアップ抵抗を介してVCCに接続。

皆さんがご存知のように、LCDや他のディスプレイは人間とのインタラクションを豊かにしていますが、共通の弱点があります。コントローラに接続されると、多数のIOが占有され、外部ポートの少ないコントローラではその他の機能が制限されます。

そこで、この問題を解決するためにI2Cモジュールを搭載したLCD1602が開発されました。I2Cモジュールには、I2CシリアルデータをLCDディスプレイの並列データに変換するPCF8574 I2Cチップが内蔵されています。

* `PCF8574 データシート <https://www.ti.com/lit/ds/symlink/pcf8574.pdf?ts=1627006546204&ref_url=https%253A%252F%252Fwww.google.com%252F>`_

**I2Cアドレス**

デフォルトのアドレスは基本的に0x27で、場合によっては0x3Fになることがあります。

デフォルトアドレス0x27を例に、デバイスアドレスはA0/A1/A2パッドをショートすることで変更可能です；デフォルト状態ではA0/A1/A2は1、パッドがショートしているとA0/A1/A2は0になります。

.. image:: img/i2c_address.jpg
    :width: 600

**バックライト/コントラスト**

バックライトはジャンパーキャップで有効化でき、ジャンパーキャップを外すとバックライトを無効にできます。裏側の青いポテンショメーターは、コントラスト（最も明るい白と最も暗い黒との間の明るさの比率）を調整するためのものです。

.. image:: img/back_lcd1602.jpg

* **ショートキャップ**: このキャップでバックライトを有効にでき、キャップを外すとバックライトを無効にできます。
* **ポテンショメータ**: 表示テキストの明瞭度を調整するためのもので、時計回りに回すと増加し、反時計回りに回すと減少します。

**例**

* :ref:`ar_lcd1602` (Arduinoプロジェクト)
* :ref:`ar_guess_number` (Arduinoプロジェクト)
* :ref:`py_lcd1602` (MicroPythonプロジェクト)
* :ref:`py_guess_number` (MicroPythonプロジェクト)

