.. note::

    Bonjour, bienvenue dans la communaut√© des passionn√©s de SunFounder Raspberry Pi, Arduino et ESP32 sur Facebook ! Plongez plus profond√©ment dans l'univers du Raspberry Pi, Arduino et ESP32 avec d'autres passionn√©s.

    **Pourquoi nous rejoindre ?**

    - **Support d'experts** : R√©solvez les probl√®mes apr√®s-vente et les d√©fis techniques avec l'aide de notre communaut√© et de notre √©quipe.
    - **Apprendre et partager** : √âchangez des conseils et des tutoriels pour am√©liorer vos comp√©tences.
    - **Aper√ßus exclusifs** : B√©n√©ficiez d'un acc√®s anticip√© aux annonces de nouveaux produits et aux avant-premi√®res.
    - **R√©ductions sp√©ciales** : Profitez de r√©ductions exclusives sur nos derniers produits.
    - **Promotions festives et cadeaux** : Participez √† des concours et promotions de vacances.

    üëâ Pr√™t √† explorer et cr√©er avec nous ? Cliquez sur [|link_sf_facebook|] et rejoignez-nous d√®s aujourd'hui !

.. _cpn_7_segment:

Afficheur 7 segments
==========================

.. image:: img/7_segment.png
    :width: 200
    :align: center

Un afficheur 7 segments est un composant en forme de 8 qui regroupe 7 LED. Chaque LED est appel√©e segment - lorsqu'elle est aliment√©e, un segment forme une partie d'un chiffre √† afficher.

* Chacune des LED de l'afficheur est associ√©e √† un segment positionnel dont l'une des broches de connexion est sortie du bo√Ætier en plastique rectangulaire.
* Ces broches de LED sont √©tiquet√©es de "a" √† "g", repr√©sentant chaque LED individuelle.
* Les autres broches de LED sont connect√©es ensemble pour former une broche commune.
* En polarisant les broches appropri√©es des segments LED dans un ordre particulier, certains segments s'allument et d'autres restent √©teints, affichant ainsi le caract√®re correspondant sur l'afficheur.

**Caract√©ristiques**

* Taille : 19 x 12,7 x 13,8 mm (LxLxH, incluant les broches)
* √âcran : 0,56''
* Couleur : rouge
* Cathode commune
* Tension directe : 1,8 V
* 10 broches
* Pas : standard 0,1" (2,54 mm)

**Cathode Commune (CC) ou Anode Commune (CA)**

Il existe deux types de connexion de broches : Cathode Commune (CC) et Anode Commune
 (CA). Comme le nom l'indique, un afficheur CC a toutes les cathodes des 7 LED connect√©es, 
 tandis qu'un afficheur CA a toutes les anodes des 7 segments connect√©es.

* Afficheur 7 segments √† cathode commune

.. image:: img/segment_cathode.png
    :width: 500

* Afficheur 7 segments √† anode commune

.. image:: img/segment_anode.png
    :width: 500

**Comment savoir si CC ou CA ?**

En g√©n√©ral, il y aura une √©tiquette sur le c√¥t√© de l'afficheur 7 segments, xxxAx ou xxxBx. En r√®gle g√©n√©rale, xxxAx signifie cathode commune et xxxBx signifie anode commune.

.. image:: img/7_segment.png
    :width: 250

.. image:: img/7_segment_bs.png

Vous pouvez √©galement utiliser un multim√®tre pour v√©rifier l'afficheur 7 segments s'il n'y a pas d'√©tiquette. R√©glez le multim√®tre en mode test de diode et connectez la sonde noire √† la broche centrale de l'afficheur 7 segments, et la sonde rouge √† n'importe quelle autre broche sauf la centrale. L'afficheur 7 segments est √† cathode commune si un segment s'allume.

Inversez les sondes rouge et noire si aucun segment ne s'allume. Lorsque qu'un segment s'allume, cela indique une anode commune.

.. image:: img/7_segment_test.JPG
    :width: 600

**Codes d'affichage**

Pour vous aider √† comprendre comment les afficheurs 7 segments (cathode commune) affichent les chiffres, nous avons dessin√© le tableau suivant. Les chiffres sont les nombres de 0 √† F affich√©s sur l'afficheur 7 segments ; (DP) GFEDCBA se r√©f√®re aux LED correspondantes r√©gl√©es sur 0 ou 1.

.. image:: img/segment_code.png

Par exemple, 01011011 signifie que DP, F et C sont r√©gl√©s sur 0, tandis que les autres sont r√©gl√©s sur 1. Par cons√©quent, le chiffre 2 est affich√© sur l'afficheur 7 segments.

.. image:: img/7segment_2.png

**Exemples**

* :ref:`ar_7_segment` (Projet Arduino)
* :ref:`ar_dice` (Projet Arduino)
* :ref:`py_7_segment` (Projet MicroPython)
* :ref:`py_dice` (Projet MicroPython)

