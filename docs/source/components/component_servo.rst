.. note::

    Bonjour, bienvenue dans la communaut√© des passionn√©s de SunFounder Raspberry Pi & Arduino & ESP32 sur Facebook ! Plongez plus profond√©ment dans Raspberry Pi, Arduino et ESP32 avec d'autres passionn√©s.

    **Pourquoi nous rejoindre ?**

    - **Support d'experts** : R√©solvez les probl√®mes apr√®s-vente et les d√©fis techniques avec l'aide de notre communaut√© et de notre √©quipe.
    - **Apprendre et partager** : √âchangez des conseils et des tutoriels pour am√©liorer vos comp√©tences.
    - **Aper√ßus exclusifs** : Acc√©dez en avant-premi√®re aux annonces de nouveaux produits et aux exclusivit√©s.
    - **R√©ductions sp√©ciales** : Profitez de r√©ductions exclusives sur nos derniers produits.
    - **Promotions festives et cadeaux** : Participez √† des concours et promotions de saison.

    üëâ Pr√™t √† explorer et cr√©er avec nous ? Cliquez sur [|link_sf_facebook|] et rejoignez-nous d√®s aujourd'hui !

.. _cpn_servo:

Servo
===========

.. image:: img/servo.png
    :align: center

Un servo est g√©n√©ralement compos√© des √©l√©ments suivants : bo√Ætier, axe, syst√®me d'engrenages, potentiom√®tre, moteur DC et carte embarqu√©e.  

Son fonctionnement est le suivant : Le microcontr√¥leur envoie des signaux PWM au servo, puis la carte embarqu√©e dans le servo re√ßoit les signaux par la broche de signal et contr√¥le le moteur √† l'int√©rieur pour tourner. En cons√©quence, le moteur entra√Æne le syst√®me d'engrenages qui motive ensuite l'axe apr√®s d√©c√©l√©ration. L'axe et le potentiom√®tre du servo sont connect√©s ensemble. Lorsque l'axe tourne, il entra√Æne le potentiom√®tre, qui envoie alors un signal de tension √† la carte embarqu√©e. Ensuite, la carte d√©termine la direction et la vitesse de rotation en fonction de la position actuelle, ce qui permet de s'arr√™ter exactement √† la position d√©finie et de s'y maintenir.

.. image:: img/servo_internal.png
    :align: center

L'angle est d√©termin√© par la dur√©e d'une impulsion appliqu√©e au fil de contr√¥le. C'est ce qu'on appelle la modulation de largeur d'impulsion (PWM). Le servo s'attend √† recevoir une impulsion toutes les 20 ms. La longueur de l'impulsion d√©terminera la distance de rotation du moteur. Par exemple, une impulsion de 1,5 ms fera tourner le moteur √† la position de 90 degr√©s (position neutre). 
Lorsqu'une impulsion est envoy√©e √† un servo et qu'elle est inf√©rieure √† 1,5 ms, le servo tourne vers une position et maintient son axe de sortie √† un certain nombre de degr√©s dans le sens antihoraire par rapport au point neutre. Lorsque l'impulsion est sup√©rieure √† 1,5 ms, l'effet inverse se produit. La largeur minimale et maximale de l'impulsion qui commande au servo de tourner √† une position valide est propre √† chaque servo. En g√©n√©ral, l'impulsion minimale sera d'environ 0,5 ms et l'impulsion maximale sera de 2,5 ms.

.. image:: img/servo_duty.png
    :width: 600
    :align: center

**Exemple**

* :ref:`ar_servo` (Projet Arduino)
* :ref:`py_servo` (Projet MicroPython)
